<h1>首頁</h1>
<p>小組倉儲:<a href="https://github.com/40923123/cp2020ag1">https://github.com/40923123/cp2020ag1</a></p>
<p>小組網站:<a href="https://40923123.github.io/cp2020ag1/content/index.html">https://40923123.github.io/cp2020ag1/content/index.html</a></p>
<p>github introduction:<span> </span><a href="https://www.youtube.com/watch?v=w3jLJU7DT5E">https://www.youtube.com/watch?v=w3jLJU7DT5E</a></p>
<p></p>
<p></p>
<h2>第一組</h2>
<p><span>Repository: </span><a href="https://github.com/40923102/cp2020">40923102</a><span> | Site: </span><a href="https://40923102.github.io/cp2020">40923102</a><br/><span>Repository: </span><a href="https://github.com/40923103/cp2020">40923103</a><span> | Site: </span><a href="https://40923103.github.io/cp2020">40923103</a><br/><span>Repository: </span><a href="https://github.com/40923117/cp2020">40923117</a><span> | Site: </span><a href="https://40923117.github.io/cp2020">40923117</a><br/><span>Repository: </span><a href="https://github.com/40923119/cp2020">40923119</a><span> | Site: </span><a href="https://40923119.github.io/cp2020">40923119</a><br/><span>Repository: </span><a href="https://github.com/40923123/cp2020">40923123</a><span> | Site: </span><a href="https://40923123.github.io/cp2020">40923123</a> (組長)<br/><span>Repository: </span><a href="https://github.com/40923127/cp2020">40923127</a><span> | Site: </span><a href="https://40923127.github.io/cp2020">40923127</a> <br/><span>Repository: </span><a href="https://github.com/40923131/cp2020">40923131</a><span> | Site: </span><a href="https://40923131.github.io/cp2020">40923131</a><br/><span>Repository: </span><a href="https://github.com/40923133/cp2020">40923133</a><span> | Site: </span><a href="https://40923133.github.io/cp2020">40923133</a><br/><span>Repository: </span><a href="https://github.com/40923141/cp2020">40923141</a><span> | Site: </span><a href="https://40923141.github.io/cp2020">40923141</a><br/><span>Repository: </span><a href="https://github.com/40923144/cp2020">40923144</a><span> | Site: </span><a href="https://40923144.github.io/cp2020">40923144</a><br/><span>Repository: </span><a href="https://github.com/40923148/cp2020">40923148</a><span> | Site: </span><a href="https://40923148.github.io/cp2020">40923148</a><br/><span>Repository: </span><a href="https://github.com/40923149/cp2020">40923149</a><span> | Site: </span><a href="https://40923149.github.io/cp2020">40923149</a></p>
<h1>HW1</h1>
<h4>有關作業一:</h4>
<p>電腦能做什麼? 在充分了解與電腦硬體及軟體相關英文術語的涵義與功能之後, 就能體會現代人的知識學習已經離不開電腦與網路, 因為它們已經無所不在.</p>
<p>電腦與網路結合下的科技社會, 工程師扮演著透過創新設計建立新產品與服務的重要角色, 學會如何編寫程式與電腦溝通, 並透過網路通訊進行協同設計應該是工程師必備的專業技能.</p>
<p>各組員進行作業一之前, 必須先檢查是否已經有一個 USB 3.0 規格以上 64 GB 的隨身碟, 是否已經學會如何利用<span> </span><a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a><span> </span>管理自己的網站內容, 各組是否已經學會使用 meet 與 Youtube + OBS 進行每週的分組線上會議?</p>
<p>作業一 (Due. 各班第八週上課之前)：</p>
<p>請各組員至<span> </span><a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a><span> </span>以 @gm 電子郵箱登記帳號後, 分別閱讀 PC Hardware Unit 1-5 與<a href="https://oli.cmu.edu/product-category/computer-science-programming-indep/">https://oli.cmu.edu/product-category/computer-science-programming-indep/</a><span> </span>教材內容, 各組員將所分配到的章節內容以英文及中文對照的方式, 配合電腦輔助設計室中的電腦與網路配置或操作心得, 將圖文與參考資料放入個人 cp2020 網頁, 之後再設法整合至各組分組網頁中 (由組長負責建立 cp2020ag1, a 為甲班, b 為乙班, g1 代表第一組).</p>
<p>PC Hardware</p>
<p>UNIT 1: Succeeding in PC Hardware<br/>UNIT 2: Hardware Basics<br/>PCH 1: The Basics<br/>PCH 2: Procedures and Safety<br/>PCH 3: Customer Relations<br/>UNIT 3: Hardware Components<br/>PCH 4: Cases, Form Factors, and Power Supplies<br/>PCH 5: Motherboards, Expansion Buses, and Processors<br/>PCH 6: Memory and BIOS<br/>PCH 7: Expansion Cards, Audio, Video, and Storage<br/>PCH 8: Cooling<br/>UNIT 4: Networking and Internet<br/>PCH 9: Networking Overview<br/>PCH 10: Networking Hardware<br/>PCH 11: Networking Media<br/>PCH 12: Ethernet Standards<br/>PCH 13: IPv4 and IPv6 Addresses<br/>PCH 14: TCP and UDP Protocols<br/>PCH 15: Introduction to Wireless Networking<br/>PCH 16: Internet Connectivity<br/>UNIT 5: Notebooks and Laptops<br/>PCH 17: Notebook Features and Components<br/>PCH 18: Laptop and Notebook Component Replacement<br/>PCH 19: Notebook Power and Physical Security</p>
<p>PC Software</p>
<p>UNIT 1: Succeeding in PC Software<br/>UNIT 2: Windows Operating Systems<br/>PCS 1: Windows Operating System<br/>PCS 2: Installing Windows<br/>PCS 3: Operating System Comparison<br/>PCS 4: Other Operating Systems<br/>UNIT 3: Software Utilities<br/>PCS 5: The Command Line<br/>PCS 6: Task Manager<br/>PCS 7: Disk Management<br/>PCS 8: Introduction to Control Panel Utilities<br/>PCS 9: Windows 10 Control Panel Utilities<br/>UNIT 4: Networking, Maintenance, and Security<br/>PCS 10: Networking Setup<br/>PCS 11: Preventative Maintenance<br/>PCS 12: Security Settings<br/>PCS 13: Virtualization<br/>PCS 14: Prevention Methods<br/>PCS 15: Threats and Practices<br/>PCS 16: Data Destruction and Disposal<br/>PCS 17: Wireless Networks<br/>PCS 18: Wired Network Security<br/>PCS 19: Malware<br/>UNIT 5: Mobile Systems<br/>PCS 20: Mobile Operating Systems<br/>PCS 21: Mobile Connectivity and Security<br/>PCS 22: Mobile Hardware and Synchronization<br/>UNIT 6: Troubleshooting<br/>PCS 23: Application of Troubleshooting Theory<br/>PCS 24: Troubleshooting Wired Networks<br/>PCS 25: Troubleshooting Wireless Networks<br/>PCS 26: Troubleshooting Operating Systems<br/>PCS 27: Troubleshooting Security Issues<br/>UNIT 7: Capstone<br/>PCS 28: PC Software Capstone</p>
<h2>PCH 15  Introduction to Wireless Networking(無線網路簡介)</h2>
<h2>Wireless LANs(無線局域網)</h2>
<h3>Overview(總覽)</h3>
<h4><span>The popularity of wireless local area networks (WLAN) has increased exponentially because WLAN enables people to remain connected to the network and the Internet without being tethered by wires. In this unit, we are going to cover the concepts, components, standards, design considerations, and security of WLANs. IEEE 802.11 is the overarching standard for wireless LAN technology, and was developed and is maintained by the Institute of Electrical and Electronics Engineers (IEEE) to provide wireless Ethernet connectivity to a wired IEEE 802.3 network.</span></h4>
<p><span><span>無線局域網（WLAN）的普及已成倍增長，因為WLAN使人們能夠保持連接到網絡和Internet，而不必受到電線的束縛。</span><span>在本單元中，我們將介紹WLAN的概念，組件，標準，設計注意事項和安全性。</span><span>IEEE 802.11是無線LAN技術的總體標準，由電氣和電子工程師協會（IEEE）開發和維護，以提供與有線IEEE 802.3網絡的無線以太網連接。</span></span></p>
<h3>WLAN Concepts(概念)</h3>
<p id="N1067E" lang="">Wireless local area networks are broken down into two generalized categories: ad-hoc WLANs and infrastructure WLANs. In ad hoc wireless networks, the wireless devices communicate directly with each other without the need for a wireless access point. This mode is similar to a peer-to-peer network topology, where each device connects to each other device in a mesh configuration using radio frequency waves directly between each wireless device’s interface card. This is the wireless equivalent of connecting two workstations together using a crossover cable, thereby eliminating the need for network infrastructure like hubs and switches.</p>
<p id="N10681" lang="">The second category, infrastructure WLANs, is the version that is most often and widely utilized. When operating in infrastructure mode, the wireless devices communicate to a centralized wireless router or wireless access point, and then use that centralized device to initiate communication with other wireless or wired devices that are also attached to the centralized device. This is the wireless equivalent of connecting multiple workstations to a common hub or switch and utilizing that network device to create communication between the workstations.</p>
<p id="N1067E" lang=""><span>無線局域網分為兩大類：即席WLAN和基礎設施WLAN。在自組織無線網絡中，無線設備之間直接相互通信，而無需無線接入點。此模式類似於點對點網絡拓撲，其中每個設備在網狀配置中使用直接在每個無線設備的接口卡之間的射頻波連接到另一個設備。這相當於使用交叉電纜將兩個工作站連接在一起的無線方式，從而消除了對集線器和交換機等網絡基礎設施的需求。</span></p>
<p id="N10681" lang=""><span><span>第二類是基礎設施WLAN，是最常用和廣泛使用的版本。</span><span>當在基礎結構模式下運行時，無線設備與集中式無線路由器或無線接入點進行通信，然後使用該集中式設備啟動與也連接到該集中式設備的其他無線或有線設備的通信。</span><span>這相當於將多個工作站連接到公共集線器或交換機，並利用該網絡設備在工作站之間創建通信。</span></span></p>
<h2>Wireless Devices(無線設備)</h2>
<p id="N10680" lang="">As previously stated, most wireless networks utilize infrastructure mode and make use of a wireless router or wireless access point to connect the multitude of wireless devices in a given network. A wireless router is used in most small office/home office (SOHO) networks. These devices combine a router, a switch, and a wireless access point and serve as a base station and gateway for the wireless devices. The wireless router allows the wireless devices to communicate with each other using its wireless access point and switch functionality, and then uses its router functionality to connect devices to the remote network: in most cases, the Internet. The wireless router often combines multiple devices into a single, small device. These features include a wireless access point (WAP), a switch, a router, a firewall, and a modem (either cable, fiber, or DSL depending on the Internet service provider).</p>
<p id="N10683" lang="">Wireless access points, which are integrated into SOHO wireless routers, can also be purchased as standalone units. These are most often seen in corporate environments as part of an enterprise network. A wireless access point enables a wired LAN to communicate with a wireless LAN. The standalone WAP does not interconnect the two networks, though, since it is not a router. A WAP is simply a physical device that converts the radio frequency into 1s and 0s that are easily understood by the physical switch. Note that all wireless devices and the devices on the wired LAN are seen as a single subnet in a standard network. A WAP operates like a hub, broadcasting all the information it receives over the radio frequency waves and relying on the connected devices to only listen to their own traffic.</p>
<div class="imagewrap"><span class="image"><img alt="Picture of a wireless router plugged into the wall. The device is silver and black with a short antenna. There are four green illuminated indicator lights labeled power, status, WAN, and WLAN. There is a section labeled “local network,” with the numbers 1, 2, 3, and 4, and an area labeled “phone.” A logo says “powered by D-Link.”" class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/webcontent/PCH15/image1.jpeg" title="Picture of a wireless router plugged into the wall. The device is silver and black with a short antenna. There are four green illuminated indicator lights labeled power, status, WAN, and WLAN. There is a section labeled “local network,” with the numbers 1, 2, 3, and 4, and an area labeled “phone.” A logo says “powered by D-Link.”"/></span>
<p id="N1068B" lang="">Kyocera KR1 Mobile EV-DO router. Photo used under CC-BY-NC license from<span> Scott Beale</span></p>
</div>
<p id="N10693" lang="">Wireless network interface cards (NICs) for WiFi, Bluetooth, and infrared are generally integrated into motherboard circuitry. If your computer doesn’t have one built in, you have the ability to add one either using an external USB wireless network adapter, or installing one in a PCIe expansion slot; just remember to install the appropriate drivers for your operating system to enable proper operations.</p>
<div actguid="d87f2f940a0001dc6c63d5ea3676a176" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f940a0001dc6c63d5ea3676a176&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd01">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader">learn by doing</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd01">
<div class="page 482548" id="opch15_lbd01">
<div class="question" id="482548">
<div>Rusty has been hired by the Smiths to create a wireless smart home. Rusty has purchased outlets and light bulbs that communicate wirelessly and can be controlled remotely. Which of the following devices should Rusty purchase to best connect the outlets and light bulbs to the wireless network?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582528_i1_rad_0" name="582528_i1_group" type="radio" value="A"/><label class="" for="582528_i1_rad_0">Modem</label></span><span class="radioContainer clearfix"><input id="582528_i1_rad_1" name="582528_i1_group" type="radio" value="B"/><label class="" for="582528_i1_rad_1">Switch</label></span><span class="radioContainer clearfix"><input id="582528_i1_rad_2" name="582528_i1_group" type="radio" value="C"/><label class="" for="582528_i1_rad_2">Router</label></span><span class="radioContainer clearfix"><input id="582528_i1_rad_3" name="582528_i1_group" type="radio" value="D"/><label class="incorrectPrimary" for="582528_i1_rad_3">Cable</label></span></div>
<div class="feedback clearfix incorrect"><span class="icon"></span>
<div class="response">Incorrect. A router can provide a wireless access point and connect the wireless light bulbs and outlets to the network.</div>
<span class="xBtn">x</span></div>
</div>
<a alt="Click for hint" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556354" title="Click for hint"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f940a0001dc6c63d5ea3676a176"></div>
<div class="pageControls clearfix">
<p id="N10680" lang=""><span>如前所述，大多數無線網絡都利用基礎架構模式，並利用無線路由器或無線接入點來連接給定網絡中的眾多無線設備。在大多數小型辦公室/家庭辦公室（SOHO）網絡中使用無線路由器。這些設備將路由器，交換機和無線接入點結合在一起，並充當無線設備的基站和網關。無線路由器允許無線設備使用其無線接入點和交換機功能相互通信，然後使用其路由器功能將設備連接到遠程網絡：在大多數情況下為Internet。無線路由器通常將多個設備組合為一個小型設備。這些功能包括無線訪問點（WAP），交換機，路由器，防火牆和調製解調器（電纜，光纖，</span></p>
<p id="N10683" lang=""><span><span>集成到SOHO無線路由器中的無線訪問點也可以作為獨立單元購買。</span><span>這些通常在公司環境中被視為企業網絡的一部分。</span><span>無線訪問點使有線局域網能夠與無線局域網進行通信。</span><span>但是，獨立的WAP無法將兩個網絡互連，因為它不是路由器。</span><span>WAP只是將無線電頻率轉換為1和0的物理設備，物理交換機很容易理解。</span><span>請注意，所有無線設備和有線LAN上的設備在標準網絡中都被視為單個子網。</span><span>WAP就像集線器一樣工作，它會通過射頻波廣播接收到的所有信息，並依靠連接的設備僅監聽其自身的流量。</span></span></p>
<div class="imagewrap"><span class="image"><img alt="無線路由器插入牆壁的圖片。 該設備為銀色和黑色，天線較短。 有四個標記為電源，狀態，WAN和WLAN的綠色點亮的指示燈。 有一個標有“本地網絡”的部分，其中有數字1、2、3和4，還有一個標有“電話”的區域。 徽標上寫著“由D-Link供電”。" class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/webcontent/PCH15/image1.jpeg" title="無線路由器插入牆壁的圖片。 該設備為銀色和黑色，天線較短。 有四個標記為電源，狀態，WAN和WLAN的綠色點亮的指示燈。 有一個標有“本地網絡”的部分，其中有數字1、2、3和4，還有一個標有“電話”的區域。 徽標上寫著“由D-Link供電”。"/></span>
<p id="N1068B" lang=""><span><span>京瓷KR1移動式EV-DO路由器。</span><span>照片由 Scott Beale</span></span><span><span>根據CC-BY-NC許可使用</span><span>。</span></span></p>
</div>
<p id="N10693" lang=""><span><span>用於WiFi，藍牙和紅外的無線網絡接口卡（NIC）通常集成在主板電路中。</span><span>如果您的計算機沒有內置的適配器，則可以使用外部USB無線網絡適配器添加一個適配器，也可以在PCIe擴展插槽中安裝一個適配器。</span><span>只需記住為您的操作系統安裝適當的驅動程序即可啟用正確的操作。</span></span></p>
<div actguid="d87f2f940a0001dc6c63d5ea3676a176" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f940a0001dc6c63d5ea3676a176&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd01">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader"><span><span>通過實踐學習</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd01">
<div class="page 482548" id="opch15_lbd01">
<div class="question" id="482548">
<div><span><span>Smiths僱用Rusty來創建無線智能家居。</span><span>Rusty購買了可以無線通訊並可以遠程控制的插座和燈泡。</span><span>Rusty應該購買以下哪些設備來最好地將插座和燈泡連接到無線網絡？</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582528_i1_rad_0" name="582528_i1_group" type="radio" value="A"/><label class="" for="582528_i1_rad_0"><span><span>調製解調器</span></span></label></span><span class="radioContainer clearfix"><input id="582528_i1_rad_1" name="582528_i1_group" type="radio" value="B"/><label class="" for="582528_i1_rad_1"><span><span>開關</span></span></label></span><span class="radioContainer clearfix"><input id="582528_i1_rad_2" name="582528_i1_group" type="radio" value="C"/><label class="correctPrimary" for="582528_i1_rad_2"><span><span>路由器</span></span></label></span><span class="radioContainer clearfix"><input id="582528_i1_rad_3" name="582528_i1_group" type="radio" value="D"/><label class="" for="582528_i1_rad_3"><span><span>電纜</span></span></label></span></div>
<div class="feedback clearfix correct"><span class="icon"></span>
<div class="response"><span><span>正確。</span><span>路由器可以提供無線訪問點，並將無線燈泡和插座連接到網絡。</span></span></div>
<span class="xBtn"><span><span>X</span></span></span></div>
</div>
<a alt="點擊提示" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556354" title="點擊提示"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f940a0001dc6c63d5ea3676a176"></div>
<h2>Wireless Standards(無線標準)</h2>
<h3>Background and History(背景和歷史)</h3>
<p id="N1069F" lang="">Wireless (Wi-Fi) networking speeds, the technology behind broadcast streams, and wireless security have greatly improved user connectivity, which in turn has increased the use of multi-purpose devices such as smartphones and tablets in corporate and SOHO networks. The freedom of Wi-Fi has become the infrastructure of choice and essentially relegated wired networks more to moving mass data traffic and less user traffic. Although it will not eliminate the wired infrastructure, because Wi-Fi access points need to connect to a wired device using the Ethernet standard, Wi-Fi allows greater expandability and access for IT departments in both corporate and SOHO environments.</p>
<p id="N106A2" lang="">At the time when Wi-Fi became viable for implementation, the wired standard available in most corporate and SOHO networks operated at 100 Mbps. The Institute of Electrical and Electronics Engineers (IEEE) Standards Committee creates and maintains media access control (MAC) and physical layer (PHY) specifications for implementing WLAN computer communication. The IEEE 802.11 standard is overarching guidance that has been provided for the large number of wireless standards. The IEEE Wi-Fi standard is 802.11 with a small letter designation referring to the next revision (e.g., 802.11n, 802.11ac, 802.11ad, etc.). Each standard (like 802.11a, 802.11b, 802.11g, or 802.11n) is differentiated by the frequency range or frequency band that it utilizes.</p>
<p id="N106A5" lang="">The 802.11 standard was initially ratified in 1997 and devices compliant with the 802.11a and 802.11b revisions became commercially available soon after in 2000. Despite higher throughput, 802.11a devices were not as readily adopted as 802.11b devices. At the time Wi-Fi became viable to deploy 802.11b at a maximum throughput of 11 Mbps, wired networks were at a minimum of 100 Mbps in most corporate and SOHO environments. The slower throughput kept users more reliant on traditional desktop machines and less likely to use their new wireless-capable laptops wirelessly. Once 802.11g was sufficiently saturated in the market, the disparity between its 54 Mbps speed and the 100 Mbps speed of wired networks became less noticeable and consumers became more interested in being wireless. The industry continued to push for ways to design higher throughput devices and incorporate the hardware into mobile devices such as cell phones, tablets, and lighter-weight laptops.</p>
<p id="N106A8" lang="">Wireless LANs use two primary frequency bands: 2.4 GHz and 5 GHz. The 2.4 GHz range actually encompasses 2.4 to 2.5 GHz frequencies, while the 5 GHz range is 5.75 GHz to 5.875 GHz. Each frequency band has specific channels (or small portions of frequency) at which the devices operate to avoid overlapping with other wireless LAN devices. For 2.4 GHz frequency bands, it is important to choose channels 1, 6, and 11 to avoid overlapping frequencies. This is because overlapping can cause interference in your networks and cause data transmission and receiving issues for the devices.</p>
<p id="N1069F" lang=""><span>無線（Wi-Fi）網絡速度，廣播流背後的技術以及無線安全性極大地改善了用戶連接性，進而增加了企業和SOHO網絡中諸如智能手機和平板電腦等多功能設備的使用。Wi-Fi的自由度已成為首選的基礎架構，從本質上講，降低了有線網絡的傳輸效率，使之可以移動海量數據流量而減少用戶流量。儘管不會消除有線基礎架構，但由於Wi-Fi接入點需要使用以太網標準連接到有線設備，因此Wi-Fi允許企業和SOHO環境中的IT部門具有更大的可擴展性和訪問權限。</span></p>
<p id="N106A2" lang=""><span><span>Wi-Fi成為可行的實現之時，大多數公司和SOHO網絡中可用的有線標準以100 Mbps的速度運行。</span><span>電氣和電子工程師協會（IEEE）標準委員會創建並維護用於實現WLAN計算機通信的媒體訪問控制（MAC）和物理層（PHY）規範。</span><span>IEEE 802.11標準是為大量無線標準提供的總體指導。</span><span>IEEE Wi-Fi標準是802.11，帶有小寫字母，表示下一個修訂版本（例如802.11n，802.11ac，802.11ad等）。</span><span>每個標準（如802.11a，802.11b，802.11g或802.11n）都根據其使用的頻率範圍或頻帶進行區分。</span></span></p>
<p id="N106A5" lang=""><span><span>802.11標準最初是在1997年批准的，並且與802.11a和802.11b修訂版兼容的設備在2000年之後很快就可以商業化使用。儘管吞吐量更高，但是802.11a設備不如802.11b設備那樣容易採用。</span><span>當Wi-Fi能夠以11 Mbps的最大吞吐量部署802.11b時，在大多數公司和SOHO環境中，有線網絡的最低速度為100 Mbps。</span><span>較低的吞吐量使用戶更依賴於傳統台式機，並且不太可能無線使用其具有無線功能的新型筆記本電腦。</span><span>一旦802.11g在市場上充分飽和，其54 Mbps速度與100 Mbps有線網絡速度之間的差異就變得不那麼明顯了，消費者對無線變得越來越感興趣。</span></span></p>
<p id="N106A8" lang=""><span><span>無線局域網使用兩個主要頻段：2.4 GHz和5 GHz。</span><span>2.4 GHz範圍實際上包含2.4至2.5 GHz頻率，而5 GHz範圍是5.75 GHz至5.875 GHz。</span><span>每個頻帶具有設備在其上操作的特定信道（或頻率的一小部分），以避免與其他無線LAN設備重疊。</span><span>對於2.4 GHz頻帶，重要的是選擇信道1、6和11，以避免頻率重疊。</span><span>這是因為重疊會導致網絡干擾，並導致設備的數據傳輸和接收問題。</span></span></p>
<h3>Speed, Range, and Frequencies(速度，範圍和頻率)</h3>
<div class="section" id="N106AD">
<div class="sectionContain">
<p id="N106B4" lang="">Bandwidth speed has been greatly improved through the revisions after 802.11b, as shown in the table below. When discussing data flow and speed, the two terms referred to are bandwidth and throughput. Though they are often used interchangeably, the two terms are different and need to be understood. Simply put, bandwidth is the theoretical maximum of the given standard, whereas throughput is the actual potential in a real-world scenario. Many factors affect actual throughput, such as frequency, channel overlap, and broadcast streams.</p>
<table align="center" cellspacing="0" class="wbtable" lang="">
<tbody>
<tr class="e">
<td align="center" lang=""><em class="italic" lang=""><em class="bold" lang="">Revision</em></em></td>
<td align="center" lang=""><em class="italic" lang=""><em class="bold" lang="">(Max) Bandwidth</em></em></td>
<td align="center" lang=""><em class="italic" lang=""><em class="bold" lang="">Frequency</em></em></td>
</tr>
<tr>
<td align="center" lang="">802.11a</td>
<td align="center" lang="">54 Mbps</td>
<td align="center" lang="">3.7/5.0</td>
</tr>
<tr class="e">
<td align="center" lang="">802.11b</td>
<td align="center" lang="">11 Mbps</td>
<td align="center" lang="">2.4</td>
</tr>
<tr>
<td align="center" lang="">802.11g</td>
<td align="center" lang="">54 Mbps</td>
<td align="center" lang="">2.4</td>
</tr>
<tr class="e">
<td align="center" lang="">802.11n</td>
<td align="center" lang="">300/600 Mbps</td>
<td align="center" lang="">2.4/5.0</td>
</tr>
<tr>
<td align="center" lang="">802.11ac</td>
<td align="center" lang="">1700+ Gbps</td>
<td align="center" lang="">5.0</td>
</tr>
</tbody>
</table>
<p id="N10722" lang="">The four wireless standards that are important to focus your studies on are 802.11a, 802.11b, 802.11g, and 802.11n. 802.11a operates in the 5 GHz frequency band, has a maximum bandwidth of 54 Mbps, and has a range of up to 35 meters indoors and 120 meters outdoors. 802.11b operates in the 2.4 GHz frequency band, has a maximum bandwidth of 11 Mbps, and has a range of up to 32 meters indoors and 140 meters outdoors. 802.11g operates in the 2.4 GHz frequency band, has a maximum bandwidth of 54 Mbps, and has a range of up to 32 meters indoors and 140 meters outdoors. 802.11n features a dual-band transceiver, operating in both the 2.4 GHz and 5 GHz frequency bands, has a maximum bandwidth of more than 300 Mbps, and has a range of up to 70 meters indoors and 250 meters outdoors.</p>
<p id="N10725" lang="">The 2.4 GHz frequency band is more robust than the 5.0 GHz in that it is less susceptible to interference and has a wider distance range. However, many more devices such as RC toys, cordless telephones, other radio devices such as mice and keyboards, and microwave ovens also operate in the 2.4 GHz frequency, so it is more crowded, which can have a negative impact on throughput. Although the 5.0 GHz frequency band is less crowded, it is more susceptible to obstructions such as building infrastructure (i.e., walls, floors, steel beams, etc.) due to absorption.</p>
<p id="N10728" lang="">Beginning with the 802.11n standard and subsequently moving to the current 802.11ac standard, manufacturers incorporated multiple antennae to achieve higher throughput. Known as multiple-input multiple-output (MIMO), both revisions accomplish the higher throughput by allowing operation at two different channel widths (20 and 40 MHz) within the same frequency and operate on both 2.4 GHz and 5.0 GHz frequency bands at the same time. Wireless N (802.11n) and wireless AC have a much larger bandwidth and maximum range, because they use MIMO and multiple frequency bands working in tandem to increase transmission and reception.</p>
<p id="N1072B" lang="">An important note is that wireless N, G, and B are all compatible because they all support the 2.4 GHz frequency, allowing for backward compatibility. If you use multiple standards, like B, G, and N devices at the same time on a singular wireless N wireless access point, the WAP will default back to wireless B standards to support each device, which will significantly slow down the network. Wireless N and wireless A are compatible because they both use the 5 GHz frequency band. However, wireless A is<span> </span><em class="italic" lang="">not<span> </span></em>compatible with wireless B or G devices.</p>
<div actguid="d87f2f970a0001dc466be0dc297ae99c" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f970a0001dc466be0dc297ae99c&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd02">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader">learn by doing</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd02">
<div class="page 482565 482566" id="opch15_lbd02">
<div class="question" id="482565">
<div>Which wireless standard operates at a maximum of 11 Mbps?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582566_i1_rad_0" name="582566_i1_group" type="radio" value="A"/><label for="582566_i1_rad_0">802.11a</label></span><span class="radioContainer clearfix"><input id="582566_i1_rad_1" name="582566_i1_group" type="radio" value="B"/><label for="582566_i1_rad_1">802.11b</label></span><span class="radioContainer clearfix"><input id="582566_i1_rad_2" name="582566_i1_group" type="radio" value="C"/><label for="582566_i1_rad_2">802.11g</label></span><span class="radioContainer clearfix"><input id="582566_i1_rad_3" name="582566_i1_group" type="radio" value="D"/><label for="582566_i1_rad_3">802.11n</label></span></div>
</div>
<a alt="Click for hint" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556392" title="Click for hint"></a></div>
<div class="question" id="482566">
<div>Which wireless standard operates at a maximum of more than 300 Mbps with channel bonding?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582567_i1_rad_0" name="582567_i1_group" type="radio" value="A"/><label for="582567_i1_rad_0">802.11a</label></span><span class="radioContainer clearfix"><input id="582567_i1_rad_1" name="582567_i1_group" type="radio" value="B"/><label for="582567_i1_rad_1">802.11b</label></span><span class="radioContainer clearfix"><input id="582567_i1_rad_2" name="582567_i1_group" type="radio" value="C"/><label for="582567_i1_rad_2">802.11g</label></span><span class="radioContainer clearfix"><input id="582567_i1_rad_3" name="582567_i1_group" type="radio" value="D"/><label for="582567_i1_rad_3">802.11n</label></span></div>
</div>
<a alt="Click for hint" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556393" title="Click for hint"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f970a0001dc466be0dc297ae99c"></div>
</div>
</div>
</div>
<div actguid="d87f2f980a0001dc70b899ce62794a7a" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f980a0001dc70b899ce62794a7a&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt01">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader">did I get this</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt01">
<div class="page 482557" id="opch15_digt01">
<div class="question ddfb" id="482557">
<div>
<p id="N1006C" lang="">Drag and drop the items to match each standard with its frequency band, bandwidth, and range.</p>
<div class="customActivityHolder" data-showinputs="false" height="477" id="custom-482557" layout="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/webcontent/pch15_digt01_layout.xml" source="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/webcontent/DragDropWrapper.js" type="javascript" width="550">
<div>
<div class="component">
<table border="0" cellspacing="4" width="100%">
<tbody>
<tr>
<td><em>Standard</em></td>
<td><em>Frequency Band</em></td>
<td><em>Maximum Bandwidth</em></td>
<td><em>Maximum Range</em></td>
</tr>
<tr>
<td>802.11a</td>
<td>
<div class="target" input_ref="target1"></div>
</td>
<td>
<div class="target" input_ref="target2"></div>
</td>
<td>
<div class="target" input_ref="target3"></div>
</td>
</tr>
<tr>
<td>802.11b</td>
<td>
<div class="target" input_ref="target4"></div>
</td>
<td>
<div class="target" input_ref="target5"></div>
</td>
<td>
<div class="target" input_ref="target6"></div>
</td>
</tr>
<tr>
<td>802.11g</td>
<td>
<div class="target" input_ref="target7"></div>
</td>
<td>
<div class="target" input_ref="target8"></div>
</td>
<td>
<div class="target" input_ref="target9"></div>
</td>
</tr>
<tr>
<td>802.11n</td>
<td>
<div class="target" input_ref="target10"></div>
</td>
<td>
<div class="target" input_ref="target11"></div>
</td>
<td>
<div class="target" input_ref="target12"></div>
</td>
</tr>
</tbody>
</table>
</div>
<div class="input_source">
<p></p>
<div class="initiator" input_val="drag3">35 meters indoors, 120 meters outdoors</div>
<div class="initiator" input_val="drag11">130−150 Mbps (more than 300 Mbps with channel bonding)</div>
<div class="initiator" input_val="drag12">70 meters indoors, 250 meters outdoors</div>
<span> </span>
<div class="initiator" input_val="drag1">5 GHz</div>
<span> </span>
<div class="initiator" input_val="drag6">32 meters indoors, 140 meters outdoors</div>
<div class="initiator" input_val="drag7">2.4 GHz</div>
<span> </span>
<div class="initiator" input_val="drag9">32 meters indoors, 140 meters outdoors</div>
<span> </span>
<div class="initiator" input_val="drag10">2.4 GHz or 5 GHz</div>
<span> </span>
<div class="initiator" input_val="drag5">11 Mbps</div>
<div class="initiator" input_val="drag2">54 Mbps</div>
<span> </span>
<div class="initiator" input_val="drag8">54 Mbps</div>
<span> </span>
<div class="initiator" input_val="drag4">2.4 GHz</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f980a0001dc70b899ce62794a7a"></div>
</div>
</div>
</div>
<div actguid="d87f2f9c0a0001dc47e3370f1623991c" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f9c0a0001dc47e3370f1623991c&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt02">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader">did I get this</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt02">
<div class="page 482538" id="opch15_digt02">
<div class="question" id="482538">
<div>True or False: Using multiple standards — such as B, G, and N devices — at the same time on a single wireless N wireless access point will significantly slow down the network.</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582518_i1_rad_0" name="582518_i1_group" type="radio" value="A"/><label for="582518_i1_rad_0">True</label></span><span class="radioContainer clearfix"><input id="582518_i1_rad_1" name="582518_i1_group" type="radio" value="B"/><label for="582518_i1_rad_1">False</label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f9c0a0001dc47e3370f1623991c"></div>
</div>
</div>
</div>
</div>
</div>
<div class="activitywrap purpose checkpoint wbactivity">
<div class="activityhead">
<div class="purposeType purposecheckpoint" title=""><span class="scnReader">checkpoint</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity wbactivity" id="N10791">
<p id="N10796" lang="">Take a minute to stop and reflect on your progress for this learning objective.</p>
<div actguid="d87f2f950a0001dc5e96b3d0b5ef31e0" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f950a0001dc5e96b3d0b5ef31e0&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap compositeNest flash" id="dpch15_checkpoint1">
<div class="activityhead">
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_checkpoint1">
<div class="page 482802" id="opch15_checkpoint1">
<div class="question" id="482802">
<div>Do you feel comfortable with this material and ready to move on?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582880_i1_rad_0" name="582880_i1_group" type="radio" value="A"/><label for="582880_i1_rad_0">Yes, I feel confident in my ability to meet this learning objective.</label></span><span class="radioContainer clearfix"><input id="582880_i1_rad_1" name="582880_i1_group" type="radio" value="B"/><label for="582880_i1_rad_1">No, I'd like to see some more material on this learning objective.</label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix"></div>
<div class="pageControls clearfix">
<div class="section" id="N106AD">
<div class="sectionContain">
<p id="N106B4" lang=""><span>如下表所示，通過802.11b的修訂，帶寬速度得到了極大的提高。在討論數據流和速度時，所指的兩個術語是帶寬和吞吐量。儘管它們經常互換使用，但這兩個術語是不同的，需要理解。簡而言之，帶寬是給定標準的理論最大值，而吞吐量是實際情況下的實際潛力。許多因素都會影響實際的吞吐量，例如頻率，頻道重疊和廣播流。</span></p>
<table align="center" cellspacing="0" class="wbtable" lang="">
<tbody>
<tr class="e">
<td align="center" lang=""><em class="italic" lang=""><em class="bold" lang=""><span>修訂版</span></em></em></td>
<td align="center" lang=""><em class="italic" lang=""><em class="bold" lang=""><span>（最大）帶寬</span></em></em></td>
<td align="center" lang=""><em class="italic" lang=""><em class="bold" lang=""><span>頻率</span></em></em></td>
</tr>
<tr>
<td align="center" lang=""><span>802.11a</span></td>
<td align="center" lang=""><span>54 Mbps</span></td>
<td align="center" lang=""><span>3.7 / 5.0</span></td>
</tr>
<tr class="e">
<td align="center" lang=""><span>802.11b</span></td>
<td align="center" lang=""><span>11 Mbps</span></td>
<td align="center" lang=""><span>2.4</span></td>
</tr>
<tr>
<td align="center" lang=""><span>802.11g</span></td>
<td align="center" lang=""><span>54 Mbps</span></td>
<td align="center" lang=""><span>2.4</span></td>
</tr>
<tr class="e">
<td align="center" lang=""><span>802.11n</span></td>
<td align="center" lang=""><span>300/600 Mbps</span></td>
<td align="center" lang=""><span>2.4 / 5.0</span></td>
</tr>
<tr>
<td align="center" lang=""><span>802.11ac</span></td>
<td align="center" lang=""><span>1700+ Gbps</span></td>
<td align="center" lang=""><span>5.0</span></td>
</tr>
</tbody>
</table>
<p id="N10722" lang=""><span>專注於研究的四個無線標準是802.11a，802.11b，802.11g和802.11n。802.11a工作在5 GHz頻段，最大帶寬為54 Mbps，室內的最大距離為35米，室外的最大距離為120米。802.11b工作在2.4 GHz頻段，最大帶寬為11 Mbps，室內最大範圍為32米，室外最大範圍為140米。802.11g工作在2.4 GHz頻段，最大帶寬為54 Mbps，室內最大範圍為32米，室外最大範圍為140米。802.11n具有工作在2.4 GHz和5 GHz頻帶上的雙頻收發器，最大帶寬超過300 Mbps，室內最大範圍為70米，室外最大範圍為250米。</span></p>
<p id="N10725" lang=""><span>2.4 GHz頻段比5.0 GHz更加健壯，因為它不易受到干擾，並且距離範圍更廣。但是，更多的設備（例如RC玩具，無繩電話，其他無線電設備（例如，鼠標和鍵盤）和微波爐）也以2.4 GHz頻率運行，因此擁擠不堪，這可能會對吞吐量產生負面影響。儘管5.0 GHz頻帶的擁擠程度較小，但是由於吸收，它更容易受到諸如建築基礎設施（例如，牆壁，地板，鋼樑等）的障礙物的影響。</span></p>
<p id="N10728" lang=""><span>從802.11n標准開始，然後發展到當前的802.11ac標準，製造商採用了多個天線來實現更高的吞吐量。這兩種版本都稱為多輸入多輸出（MIMO），通過允許在同一頻率內在兩個不同的信道寬度（20和40 MHz）下運行，並在2.4 GHz和5.0 GHz頻段上同時運行，從而實現了更高的吞吐量。時間。無線N（802.11n）和無線AC具有更大的帶寬和最大範圍，因為它們使用MIMO和多個頻段協同工作以增加傳輸和接收。</span></p>
<p id="N1072B" lang=""><span>重要說明是無線N，G和B都兼容，因為它們都支持2.4 GHz頻率，從而實現了向後兼容性。如果您在單個無線N無線接入點上同時使用多個標準，例如B，G和N設備，則WAP將默認恢復為無線B標準以支持每個設備，這將大大降低網絡速度。無線N和無線A兼容，因為它們都使用5 GHz頻帶。但是，無線A與無線B或G設備</span><em class="italic" lang=""><span>不</span></em><span>兼容。</span></p>
<div actguid="d87f2f970a0001dc466be0dc297ae99c" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f970a0001dc466be0dc297ae99c&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd02">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader"><span>通過實踐學習</span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd02">
<div class="page 482565 482566" id="opch15_lbd02">
<div class="question" id="482565">
<div><span>哪個無線標準以最高11 Mbps的速度運行？</span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582566_i1_rad_0" name="582566_i1_group" type="radio" value="A"/><label for="582566_i1_rad_0"><span>802.11a</span></label></span><span class="radioContainer clearfix"><input id="582566_i1_rad_1" name="582566_i1_group" type="radio" value="B"/><label for="582566_i1_rad_1"><span>802.11b</span></label></span><span class="radioContainer clearfix"><input id="582566_i1_rad_2" name="582566_i1_group" type="radio" value="C"/><label for="582566_i1_rad_2"><span>802.11g</span></label></span><span class="radioContainer clearfix"><input id="582566_i1_rad_3" name="582566_i1_group" type="radio" value="D"/><label for="582566_i1_rad_3"><span>802.11n</span></label></span></div>
</div>
<a alt="點擊提示" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556392" title="點擊提示"></a></div>
<div class="question" id="482566">
<div><span>哪種無線標准通過通道綁定可以以最高300 Mbps的速度運行？</span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582567_i1_rad_0" name="582567_i1_group" type="radio" value="A"/><label for="582567_i1_rad_0"><span>802.11a</span></label></span><span class="radioContainer clearfix"><input id="582567_i1_rad_1" name="582567_i1_group" type="radio" value="B"/><label for="582567_i1_rad_1"><span>802.11b</span></label></span><span class="radioContainer clearfix"><input id="582567_i1_rad_2" name="582567_i1_group" type="radio" value="C"/><label for="582567_i1_rad_2"><span>802.11g</span></label></span><span class="radioContainer clearfix"><input id="582567_i1_rad_3" name="582567_i1_group" type="radio" value="D"/><label for="582567_i1_rad_3"><span>802.11n</span></label></span></div>
</div>
<a alt="點擊提示" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556393" title="點擊提示"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f970a0001dc466be0dc297ae99c"><span> </span></div>
</div>
</div>
</div>
<div actguid="d87f2f980a0001dc70b899ce62794a7a" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f980a0001dc70b899ce62794a7a&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt01">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader"><span>我得到這個了嗎</span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt01">
<div class="page 482557" id="opch15_digt01">
<div class="question ddfb" id="482557">
<div>
<p id="N1006C" lang=""><span>拖放項目以使其符合每個標準的頻段，帶寬和範圍。</span></p>
<div class="customActivityHolder" data-showinputs="false" height="477" id="custom-482557" layout="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/webcontent/pch15_digt01_layout.xml" source="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/webcontent/DragDropWrapper.js" type="javascript" width="550">
<div>
<div class="component">
<table border="0" cellspacing="4" width="100%">
<tbody>
<tr>
<td><em><span>標準</span></em></td>
<td><em><span>頻帶</span></em></td>
<td><em><span>最大帶寬</span></em></td>
<td><em><span>最大範圍</span></em></td>
</tr>
<tr>
<td><span>802.11a</span></td>
<td>
<div class="target" input_ref="target1"></div>
</td>
<td>
<div class="target" input_ref="target2"></div>
</td>
<td>
<div class="target" input_ref="target3"></div>
</td>
</tr>
<tr>
<td><span>802.11b</span></td>
<td>
<div class="target" input_ref="target4"></div>
</td>
<td>
<div class="target" input_ref="target5"></div>
</td>
<td>
<div class="target" input_ref="target6"></div>
</td>
</tr>
<tr>
<td><span>802.11g</span></td>
<td>
<div class="target" input_ref="target7"></div>
</td>
<td>
<div class="target" input_ref="target8"></div>
</td>
<td>
<div class="target" input_ref="target9"></div>
</td>
</tr>
<tr>
<td><span>802.11n</span></td>
<td>
<div class="target" input_ref="target10"></div>
</td>
<td>
<div class="target" input_ref="target11"></div>
</td>
<td>
<div class="target" input_ref="target12"></div>
</td>
</tr>
</tbody>
</table>
</div>
<div class="input_source">
<p></p>
<div class="initiator" input_val="drag3"><span>室內35米，室外120米</span></div>
<span> </span>
<div class="initiator" input_val="drag11"><span>130−150 Mbps（使用通道綁定時超過300 Mbps）</span></div>
<div class="initiator" input_val="drag12"><span>室內70米，室外250米</span></div>
<span> </span>
<div class="initiator" input_val="drag1"><span>5 GHz的</span></div>
<span> </span>
<div class="initiator" input_val="drag6"><span>室內32米，室外140米</span></div>
<span> </span>
<div class="initiator" input_val="drag7"><span>2.4 GHz</span></div>
<div class="initiator" input_val="drag9"><span>室內32米，室外140米</span></div>
<span> </span>
<div class="initiator" input_val="drag10"><span>2.4 GHz或5 GHz</span></div>
<span> </span>
<div class="initiator" input_val="drag5"><span>11 Mbps</span></div>
<span> </span>
<div class="initiator" input_val="drag2"><span>54 Mbps</span></div>
<span> </span>
<div class="initiator" input_val="drag8"><span>54 Mbps</span></div>
<span> </span>
<div class="initiator" input_val="drag4"><span>2.4 GHz</span></div>
<div class="initiator" input_val="drag4"><span></span></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div actguid="d87f2f9c0a0001dc47e3370f1623991c" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f9c0a0001dc47e3370f1623991c&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt02">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader"><span>我得到這個了嗎</span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt02">
<div class="page 482538" id="opch15_digt02">
<div class="question" id="482538">
<div><span>是非題：在單個無線N無線接入點上同時使用多個標準（例如B，G和N設備）將大大降低網絡速度。</span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582518_i1_rad_0" name="582518_i1_group" type="radio" value="A"/><label for="582518_i1_rad_0"><span>真正</span></label></span><span class="radioContainer clearfix"><input id="582518_i1_rad_1" name="582518_i1_group" type="radio" value="B"/><label for="582518_i1_rad_1"><span>假</span></label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f9c0a0001dc47e3370f1623991c"></div>
</div>
</div>
</div>
</div>
</div>
<div class="activitywrap purpose checkpoint wbactivity">
<div class="activityhead">
<div class="purposeType purposecheckpoint" title=""><span class="scnReader"><span><span>檢查站</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity wbactivity" id="N10791">
<p id="N10796" lang=""><span><span>花一點時間停下來，為這個學習目標反思自己的進步。</span></span></p>
<div class="activityhead">
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_checkpoint1">
<div class="page 482802" id="opch15_checkpoint1">
<div class="question" id="482802">
<div><span><span>您對這種材料感到滿意並準備繼續前進嗎？</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582880_i1_rad_0" name="582880_i1_group" type="radio" value="A"/><label for="582880_i1_rad_0"><span><span>是的，我對實現這一學習目標的能力充滿信心。</span></span></label></span><span class="radioContainer clearfix"><input id="582880_i1_rad_1" name="582880_i1_group" type="radio" value="B"/><label for="582880_i1_rad_1"><span><span>不，我想了解有關此學習目標的更多材料。</span></span></label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f950a0001dc5e96b3d0b5ef31e0"></div>
<div class="pageControls clearfix"><span><span></span></span></div>
<h3>Sources of Interference(干擾源)</h3>
<p id="N107C0" lang="">Wireless networks are subject to radio frequency interference (RFI) because of other devices using frequencies in the same band as the WLAN devices. There are many sources of interference in the 2.4 GHz range, which is one reason that wireless N and newer networks have switched to the 5 GHz frequency band. The frequency interference can be caused by other WLAN devices, such as having numerous WLANs in a single building and each WAP using the same channel or channels close in number (like channel 1 and 2, or 1 and 3). To prevent this, 2.4 GHz standard wireless devices should operate in channels separated by multiple channels, such as using channels 1, 6, and 11.</p>
<p id="N107C3" lang="">Cordless phones, baby monitors, microwave ovens, wireless security systems, and other cordless electronics generally use the 2.4 GHz range, as well, so if you have many of those devices near your network, you may wish to upgrade to wireless N (5 GHz) to avoid interference. Physical obstacles, such as walls, appliances, cabinets, and other dense objects can also block the radio wave propagation, causing weak signals and network interference. Finally, the cause of interference could be that the originating signal is too weak, and some wireless access points allow you to increase the transmission power to overcome this type of interference.</p>
<p id="N107C0" lang=""><span>由於其他設備使用與WLAN設備相同頻帶的頻率，因此無線網絡會受到射頻干擾（RFI）。在2.4 GHz範圍內有許多干擾源，這是無線N和較新網絡已切換到5 GHz頻帶的原因之一。頻率干擾可能是由其他WLAN設備引起的，例如在同一建築物中具有多個WLAN，並且每個WAP使用的通道數量相同（或通道1和2，或通道1和3）相同。為避免這種情況，2.4 GHz標準無線設備應在由多個通道分隔的通道中運行，例如使用通道1、6和11。</span></p>
<p id="N107C3" lang=""><span><span>無繩電話，嬰兒監視器，微波爐，無線安全系統和其他無繩電子設備通常也使用2.4 GHz範圍，因此，如果網絡中有許多此類設備，則可能希望升級到無線N（5 GHz ），以避免干擾。</span><span>牆壁，電器，機櫃和其他密集物體等物理障礙物也會阻擋無線電波的傳播，從而導致信號微弱和網絡干擾。</span><span>最後，造成乾擾的原因可能是始發信號太弱，某些無線接入點使您可以增加傳輸功率以克服這種類型的干擾。</span></span></p>
<h2>Privacy and Security(隱私和安全)</h2>
<h3>1</h3>
<span><span><span></span></span></span></div>
<div class="actContain"><span><span><span>Due to the nature of Wi-Fi being transmitted through radio frequencies, the data transferred is susceptible to being viewed and captured by any other radio receiver. Encryption and network security have become a paramount concern for IT professionals at all levels. If a Wi-Fi network is set up without encryption it is “open,” and anybody with packet sniffing software in the vicinity can capture the transmissions between the host and the wireless access point. Public cafes and retailers offering open access do so as a courtesy, but the user must know that any online login information, such as connecting to a bank, Facebook, or Twitter, is not secure and is susceptible to capture. For the prospective technician, you must know the current encryption types and best practices to secure a WLAN.</span></span></span></div>
<div class="actContain">
<h4><span><span><span></span></span></span></h4>
</div>
<div class="actContain">
<h4><span><span><span>由於Wi-Fi會通過射頻傳輸，因此傳輸的數據很容易被其他任何無線電接收器查看和捕獲。</span><span>加密和網絡安全已成為各級IT專業人員最關心的問題。</span><span>如果建立了未加密的Wi-Fi網絡，則它是“開放的”，附近裝有數據包嗅探軟件的任何人都可以捕獲主機與無線訪問點之間的傳輸。</span><span>提供開放訪問權限的公共咖啡館和零售商這樣做是出於禮貌，但是用戶必須知道任何在線登錄信息（例如連接到銀行，Facebook或Twitter）都不安全並且容易被捕獲。</span><span>對於準技術人員，您必須了解當前的加密類型和最佳做法以保護WLAN。</span></span></span></h4>
</div>
<div class="actContain"><span><span><span></span></span></span></div>
<h3>Encryption Types(加密類型)</h3>
<span><span><span>In order to provide security for wireless networks, the 802.11 standards provide for three major types of password protection/encryption: wired equivalent privacy (WEP), Wi-Fi protected access (WPA), and Wi-Fi protected access 2 (WPA2).</span></span></span></div>
<div class="activity wbactivity"><span><span><span>為了提供無線網絡的安全性，802.11標準提供了三種主要的密碼保護/加密類型：有線等效保密（WEP），Wi-Fi保護訪問（WPA）和Wi-Fi保護訪問2（WPA2）。</span></span></span></div>
<h3>Wired Equivalent Privacy (WEP) (有線等效保密（WEP）)</h3>
<p id="N106A6" lang="">In the original 802.11 standard, the only security provided was WEP, which claims to be as secure as a wired network connection. This wireless connection was secured using encryption with a 40-bit WEP key that all access points and client devices would use (preshared key). This symmetric encryption was a good idea, but since the key was so small (40 bits), it was quickly broken by attackers.</p>
<p id="N106A9" lang="">To solve this, WEP evolved into using a 64-bit key and could support keys up to 128 bits, which would provide strong encryption. Unfortunately, the WEP algorithm used for encryption also relied on using an initialization vector (IV) in combination with the preshared key to create the strong encryption, but the IV was only created at 24 bits and is sent in plain text or clear text during the preshared key exchange. This was quickly compromised by attackers using a brute-force attack to determine the password using the weak IV. Many utilities exist in the open-source realm that can crack WEP passwords within just a few minutes on modern hardware. For this reason, WEP is considered insecure today and should never be used in your networks.</p>
<p id="N106A6" lang=""><span>在原始802.11標準中，唯一提供的安全性是WEP，它聲稱與有線網絡連接一樣安全。通過使用所有訪問點和客戶端設備都將使用的40位WEP密鑰（預共享密鑰）進行加密來保護此無線連接。這種對稱加密是一個好主意，但是由於密鑰很小（40位），因此攻擊者很快就將其破壞了。</span></p>
<p lang=""><span>為了解決這個問題，WEP演變為使用64位密鑰，並且可以支持高達128位的密鑰，從而可以提供強大的加密功能。</span><span>不幸的是，用於加密的WEP算法還依賴於使用初始化向量（IV）結合預共享密鑰來創建強加密，但是IV僅以24位創建，並且在加密期間以純文本或明文發送。預共享密鑰交換。</span><span>攻擊者使用強力攻擊使用弱IV來確定密碼，從而很快破壞了這一安全性。</span><span>開源領域中存在許多實用程序，可以在短短幾分鐘內在現代硬件上破解WEP密碼。</span><span>因此，WEP在今天被認為是不安全的，永遠不要在您的網絡中使用。</span></p>
<h3>Wi-Fi Protected Access (WPA)(Wi-Fi保護訪問（WPA）)</h3>
<p>The WPA standard was introduced to replace the insecure WEP. WPA used a 48-bit IV in place of WEP’s 24-bit IV. This upgraded IV uses a temporal key integrity protocol (TKIP). TKIP is an IEEE standard that was designed to provide more secure encryption. TKIP is a suite of algorithms that allows WLAN equipment to upgrade to TKIP without replacing hardware. TKIP encrypts each data packet with a unique encryption key, and the keys are much stronger than WEP. To increase key strength, TKIP includes four additional algorithms.</p>
<p>In addition to TKIP, the WPA standard uses message integrity check (MIC) to confirm that data was not modified in transit. MIC uses a “hash” to verify that a message has not been altered. WPA supported both preshared key mode and enterprise mode. In enterprise mode, users are required to authenticate before exchanging their keys and each key between the client and access point is only temporary, reducing the chance of compromise. Unfortunately, WPA also suffered security flaws centered on the use of passphrases and pre-shared key (PSK) management and is now also considered to be unsecure.</p>
<p>引入了WPA標準來代替不安全的WEP。WPA使用48位IV代替WEP的24位IV。此升級的IV使用臨時密鑰完整性協議（TKIP）。TKIP是旨在提供更安全的加密的IEEE標準。TKIP是一套算法，可以使WLAN設備升級到TKIP，而無需更換硬件。TKIP使用唯一的加密密鑰加密每個數據包，並且該密鑰比WEP強得多。為了增強按鍵強度，TKIP包括四個附加算法。</p>
<p>除了TKIP，WPA標準還使用消息完整性檢查（MIC）來確認數據在傳輸過程中沒有被修改。MIC使用“哈希”來驗證消息是否未被更改。WPA支持預共享密鑰模式和企業模式。在企業模式下，要求用戶在交換密鑰之前進行身份驗證，並且客戶端和訪問點之間的每個密鑰只是臨時的，從而減少了洩露的機會。不幸的是，WPA還遭受了圍繞密碼短語和預共享密鑰（PSK）管理的安全缺陷，現在也被認為是不安全的。</p>
<h3>Wi-Fi Protected Access 2 (WPA2)(Wi-Fi保護訪問2（WPA2）)</h3>
<span>Wi-Fi protected access version 2 (WPA2) was implemented to replace both WEP and WPA because of the insecurities with the 24-bit and 48-bit initialization vectors. WPA2 requires stronger encryption and integrity checking, using counter mode (CCMP) with cipher block chaining message authentication code protocol for integrity checking. Additionally, the encryption used for WPA2 is the advanced encryption standard (AES) with a 128-bit key, the same algorithm used by the United States government to protect their classified networks. Using WPA2 creates a secure wireless network, but only when used with good passwords and shared keys. WPA2 also supports enterprise mode for centralized user authentication (used in corporate networks) and a personal mode for preshared key support (used in most homes and small offices). The key to security with WPA2 is a strong password, since the current method of breaking into a WPA2 network is to use brute force attacks against the preshared key. If your key is long and complex, the attackers will not be able to penetrate your WPA2 wireless networks.</span></div>
<div class="actContain"><span><span>由於24位和48位初始化向量的不安全性，實施了Wi-Fi保護訪問版本2（WPA2）來替代WEP和WPA。</span><span>WPA2需要使用計數器模式（CCMP）和密碼塊鏈接消息身份驗證代碼協議進行更強的加密和完整性檢查，以進行完整性檢查。</span><span>此外，用於WPA2的加密是具有128位密鑰的高級加密標準（AES），與美國政府用於保護其機密網絡的算法相同。</span><span>使用WPA2可以創建安全的無線網絡，但前提是必須使用良好的密碼和共享密鑰。</span><span>WPA2還支持用於集中式用戶身份驗證的企業模式（用於公司網絡）和用於預共享密鑰支持的個人模式（用於大多數家庭和小型辦公室）。</span><span>使用WPA2進行安全保護的密鑰是一個強密碼，因為當前闖入WPA2網絡的方法是對預共享密鑰使用暴力攻擊。</span><span>如果密鑰又長又復雜，攻擊者將無法穿透您的WPA2無線網絡。</span></span></div>
<h3>Wi-Fi Protected Access 2 Enterprise(Wi-Fi保護訪問2企業)</h3>
<div class="section" id="N106D8">
<div class="sectionContain">
<p id="N106DF" lang="">WPA2 enterprise is a client/server model using the remote authentication dial-in user service (RADIUS) protocol found in larger corporate networks. The RADIUS server runs in the application layer using UDP (user datagram protocol) as a transport method, and is usually a software background service running on a UNIX or Windows server. WPA2 enterprise eliminates a shared key and replaces it with a username and a password to connect to the corporate Wi-Fi network.</p>
<p id="N106E2" lang="">Click<span> here</span><span> </span>to access a table of 802.11 wireless networking standards.</p>
</div>
</div>
<div actguid="d87f2fa10a0001dc0ebd5d384ea39307" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fa10a0001dc0ebd5d384ea39307&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd03">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader">learn by doing</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd03">
<div class="page 482493 482494" id="opch15_lbd03">
<div class="question" id="482493">
<div>Pat needs to secure a wireless network. Which of the following types of password protection/encryption should Pat choose to make the network the most secure?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582465_i1_rad_0" name="582465_i1_group" type="radio" value="A"/><label for="582465_i1_rad_0">WEP</label></span><span class="radioContainer clearfix"><input id="582465_i1_rad_1" name="582465_i1_group" type="radio" value="B"/><label for="582465_i1_rad_1">WPA</label></span><span class="radioContainer clearfix"><input id="582465_i1_rad_2" name="582465_i1_group" type="radio" value="C"/><label for="582465_i1_rad_2">WPA2</label></span></div>
</div>
<a alt="Click for hint" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556291" title="Click for hint"></a></div>
<div class="question" id="482494">
<div>True or False: Because it uses 128-bit key encryption, WPA2 is more secure and a strong password is not needed for WPA2.</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582466_i1_rad_0" name="582466_i1_group" type="radio" value="A"/><label for="582466_i1_rad_0">True</label></span><span class="radioContainer clearfix"><input id="582466_i1_rad_1" name="582466_i1_group" type="radio" value="B"/><label for="582466_i1_rad_1">False</label></span></div>
</div>
<a alt="Click for hint" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556292" title="Click for hint"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fa10a0001dc0ebd5d384ea39307"></div>
</div>
</div>
</div>
<div actguid="d87f2fa30a0001dc3210d9a0e5c2ddb4" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fa30a0001dc3210d9a0e5c2ddb4&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt03">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader">did I get this</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt03">
<div class="page 482592 482593" id="opch15_digt03">
<div class="question" id="482592">
<div>True or False: WEP uses AES-based encryption.</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582604_i1_rad_0" name="582604_i1_group" type="radio" value="A"/><label for="582604_i1_rad_0">True</label></span><span class="radioContainer clearfix"><input id="582604_i1_rad_1" name="582604_i1_group" type="radio" value="B"/><label for="582604_i1_rad_1">False</label></span></div>
</div>
</div>
<div class="question" id="482593">
<div>802.11 standards provide what types of password protection/encryption?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582605_i1_rad_0" name="582605_i1_group" type="radio" value="A"/><label for="582605_i1_rad_0">WEP</label></span><span class="radioContainer clearfix"><input id="582605_i1_rad_1" name="582605_i1_group" type="radio" value="B"/><label for="582605_i1_rad_1">WPA</label></span><span class="radioContainer clearfix"><input id="582605_i1_rad_2" name="582605_i1_group" type="radio" value="C"/><label for="582605_i1_rad_2">WPA2</label></span><span class="radioContainer clearfix"><input id="582605_i1_rad_3" name="582605_i1_group" type="radio" value="D"/><label for="582605_i1_rad_3">All of the above</label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fa30a0001dc3210d9a0e5c2ddb4"></div>
</div>
</div>
</div>
<div class="section" id="N106D8">
<div class="sectionContain">
<p id="N106DF" lang=""><span>WPA2企業版是使用大型企業網絡中使用的遠程身份驗證撥入用戶服務（RADIUS）協議的客戶端/服務器模型。RADIUS服務器使用UDP（用戶數據報協議）作為傳輸方法在應用程序層中運行，並且通常是在UNIX或Windows服務器上運行的軟件後台服務。WPA2企業消除了共享密鑰，並用用戶名和密碼代替了共享密鑰以連接到公司的Wi-Fi網絡。</span></p>
<p id="N106E2" lang=""><span>單擊此處</span><span>以訪問802.11無線網絡標準表。</span></p>
</div>
</div>
<div actguid="d87f2fa10a0001dc0ebd5d384ea39307" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fa10a0001dc0ebd5d384ea39307&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd03">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader"><span><span>通過實踐學習</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd03">
<div class="page 482493 482494" id="opch15_lbd03">
<div class="question" id="482493">
<div><span><span>Pat需要保護無線網絡。</span><span>Pat應該選擇以下哪種類型的密碼保護/加密方式來使網絡最安全？</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582465_i1_rad_0" name="582465_i1_group" type="radio" value="A"/><label for="582465_i1_rad_0"><span><span>WEP</span></span></label></span><span class="radioContainer clearfix"><input id="582465_i1_rad_1" name="582465_i1_group" type="radio" value="B"/><label for="582465_i1_rad_1"><span><span>WPA</span></span></label></span><span class="radioContainer clearfix"><input id="582465_i1_rad_2" name="582465_i1_group" type="radio" value="C"/><label for="582465_i1_rad_2"><span><span>WPA2</span></span></label></span></div>
</div>
<a alt="點擊提示" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556291" title="點擊提示"></a></div>
<div class="question" id="482494">
<div><span><span>是非題：因為WPA2使用128位密鑰加密，所以它更加安全，WPA2不需要強密碼。</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582466_i1_rad_0" name="582466_i1_group" type="radio" value="A"/><label for="582466_i1_rad_0"><span><span>真正</span></span></label></span><span class="radioContainer clearfix"><input id="582466_i1_rad_1" name="582466_i1_group" type="radio" value="B"/><label for="582466_i1_rad_1"><span><span>假</span></span></label></span></div>
</div>
<a alt="點擊提示" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556292" title="點擊提示"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fa10a0001dc0ebd5d384ea39307"></div>
</div>
</div>
</div>
<div actguid="d87f2fa30a0001dc3210d9a0e5c2ddb4" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fa30a0001dc3210d9a0e5c2ddb4&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt03">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader"><span><span>我得到這個了嗎</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt03">
<div class="page 482592 482593" id="opch15_digt03">
<div class="question" id="482592">
<div><span><span>是非題：WEP使用基於AES的加密。</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582604_i1_rad_0" name="582604_i1_group" type="radio" value="A"/><label for="582604_i1_rad_0"><span><span>真正</span></span></label></span><span class="radioContainer clearfix"><input id="582604_i1_rad_1" name="582604_i1_group" type="radio" value="B"/><label for="582604_i1_rad_1"><span><span>假</span></span></label></span></div>
</div>
</div>
<div class="question" id="482593">
<div><span><span>802.11標準提供什麼類型的密碼保護/加密？</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582605_i1_rad_0" name="582605_i1_group" type="radio" value="A"/><label for="582605_i1_rad_0"><span><span>WEP</span></span></label></span><span class="radioContainer clearfix"><input id="582605_i1_rad_1" name="582605_i1_group" type="radio" value="B"/><label for="582605_i1_rad_1"><span><span>WPA</span></span></label></span><span class="radioContainer clearfix"><input id="582605_i1_rad_2" name="582605_i1_group" type="radio" value="C"/><label for="582605_i1_rad_2"><span><span>WPA2</span></span></label></span><span class="radioContainer clearfix"><input id="582605_i1_rad_3" name="582605_i1_group" type="radio" value="D"/><label for="582605_i1_rad_3"><span><span>上述所有的</span></span></label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fa30a0001dc3210d9a0e5c2ddb4"></div>
</div>
</div>
</div>
<div class="activitywrap purpose checkpoint wbactivity">
<div class="activityhead">
<div class="purposeType purposecheckpoint" title=""><span class="scnReader"><span><span>檢查站</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity wbactivity" id="N1072A">
<p id="N1072F" lang=""><span><span>花一點時間停下來，為這個學習目標反思自己的進步。</span></span></p>
<div actguid="d87f2fa60a0001dc2f08216313c3e429" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fa60a0001dc2f08216313c3e429&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap compositeNest flash" id="dpch15_checkpoint2">
<div class="activityhead">
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_checkpoint2">
<div class="page 482813" id="opch15_checkpoint2">
<div class="question" id="482813">
<div><span><span>您對這種材料感到滿意並準備繼續前進嗎？</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582891_i1_rad_0" name="582891_i1_group" type="radio" value="A"/><label for="582891_i1_rad_0"><span><span>是的，我對實現這一學習目標的能力充滿信心。</span></span></label></span><span class="radioContainer clearfix"><input id="582891_i1_rad_1" name="582891_i1_group" type="radio" value="B"/><label for="582891_i1_rad_1"><span><span>不，我想了解有關此學習目標的更多材料。</span></span></label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fa60a0001dc2f08216313c3e429"><a alt="單擊以重置此活動的所有提示，反饋和答案。" class="btnReset" contextguids="d87f2fa60a0001dc2f08216313c3e429" id="reset-d87f2fa60a0001dc2f08216313c3e429"></a><span><span>重置此活動</span></span></div>
<h2>Wireless Networking Types(無線網絡類型)</h2>
<h3>1</h3>
<p id="N1069B" lang="">In addition to Wi-Fi networks, there are other wireless options that exist, such as Bluetooth and infrared. These types of technologies are usually used for Personal Area Networks (PANs) in order to connect (or pair) two devices in an ad hoc manner.</p>
<p id="N1069E" lang="">Bluetooth radio is used to connect many kinds of devices, including mice, keyboards, remotes, smartphones, tablets, printers, projectors, and many others. Just as USB replaced most cables between devices and the workstation, Bluetooth replaces most previous wireless technologies for personal area networks (like infrared). Bluetooth does not require direct line of sight between connected devices. Bluetooth is a low-speed, short-range networking technology that comes in three classes. Class 1, which is not common, can transmit up to 100 meters. Class 2, the most common Bluetooth in use today, can travel up to 10 meters. Class 3, a very short-range variant, only goes one meter. Bluetooth can operate at up to three Mbps, which in today’s modern computer networks is considered extremely slow.</p>
<p id="N106A1" lang="">Infrared existed before Bluetooth and was a short-range, low-speed, line-of-sight communication path. It was heavily used to connect personal digital assistants (PDAs) and wireless mice and keyboards. Not common in contemporary computers, it was replaced almost entirely by Bluetooth, but some machines keep an integrated infrared sensor for backward compatibility. If you have a need for infrared, but it isn’t included on your machine, you can add an infrared sensor through a USB adapter.</p>
<div actguid="d87f2fad0a0001dc14cb0604e23fe996" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fad0a0001dc14cb0604e23fe996&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt04">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader">did I get this</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt04">
<div class="page 482570" id="opch15_digt04">
<div class="question" id="482570">
<div>True or False: Bluetooth transmissions require the two devices to be directly in line of sight with one another for full functionality.</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582571_i1_rad_0" name="582571_i1_group" type="radio" value="A"/><label for="582571_i1_rad_0">True</label></span><span class="radioContainer clearfix"><input id="582571_i1_rad_1" name="582571_i1_group" type="radio" value="B"/><label for="582571_i1_rad_1">False</label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fad0a0001dc14cb0604e23fe996"></div>
</div>
</div>
</div>
<div class="imagewrap"><span class="image"><img alt="Image of the Bluetooth logo, which is a white character resembling an angular, stylized letter B in a blue oval." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/webcontent/PCH15/image2.png" title="Image of the Bluetooth logo, which is a white character resembling an angular, stylized letter B in a blue oval."/></span>
<p id="N106C8" lang="">Bluetooth logo. Photo used under CC-BY license from<span> Intel Free Press.<br/></span></p>
</div>
<div class="section section-lab" id="N106CF">
<p id="N1069B" lang=""><span>除了Wi-Fi網絡外，還存在其他無線選項，例如藍牙和紅外線。這些類型的技術通常用於個人區域網（PAN），以便以臨時方式連接（或配對）兩個設備。</span></p>
<p id="N1069E" lang=""><span><span>藍牙無線電用於連接多種設備，包括鼠標，鍵盤，遙控器，智能手機，平板電腦，打印機，投影儀等。</span><span>就像USB取代了設備和工作站之間的大多數電纜一樣，藍牙也取代了個人區域網（例如紅外）中大多數以前的無線技術。</span><span>藍牙不需要所連接設備之間的直接視線。</span><span>藍牙是一種低速，短距離網絡技術，分為三類。</span><span>不常見的1類可以傳輸100米。</span><span>第2類，是當今使用的最常見的藍牙，可以傳輸10米。</span><span>3級是一種非常短距離的變體，只能行駛一米。</span><span>藍牙可以以高達3 Mbps的速度運行，這在當今的現代計算機網絡中被認為是非常慢的。</span></span></p>
<p id="N106A1" lang=""><span><span>紅外技術早於藍牙技術就已存在，它是一種短距離，低速，視線通信的路徑。</span><span>它被大量用於連接個人數字助理（PDA）和無線鼠標和鍵盤。</span><span>在現代計算機中並不常見，它幾乎已完全被藍牙取代，但某些機器保留了集成的紅外傳感器以實現向後兼容性。</span><span>如果您需要紅外線，但您的機器中沒有紅外線，則可以通過USB適配器添加紅外線傳感器。</span></span></p>
<div actguid="d87f2fad0a0001dc14cb0604e23fe996" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fad0a0001dc14cb0604e23fe996&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt04">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader"><span><span>我得到這個了嗎</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt04">
<div class="page 482570" id="opch15_digt04">
<div class="question" id="482570">
<div><span><span>是非題：藍牙傳輸要求兩個設備彼此直接在視線內才能發揮全部功能。</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582571_i1_rad_0" name="582571_i1_group" type="radio" value="A"/><label for="582571_i1_rad_0"><span><span>真正</span></span></label></span><span class="radioContainer clearfix"><input id="582571_i1_rad_1" name="582571_i1_group" type="radio" value="B"/><label for="582571_i1_rad_1"><span><span>假</span></span></label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fad0a0001dc14cb0604e23fe996"></div>
</div>
</div>
</div>
<div class="imagewrap"><span class="image"><img alt="藍牙徽標的圖像，它是一個白色字符，類似於藍色橢圓形中的帶角度的風格化字母B。" class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/webcontent/PCH15/image2.png" title="藍牙徽標的圖像，它是一個白色字符，類似於藍色橢圓形中的帶角度的風格化字母B。"/></span>
<p id="N106C8" lang=""><span><span>藍牙徽標。</span><span>照片由Intel Free Press</span><span>根據CC-BY許可使用</span></span><a href="https://flic.kr/p/mwj2mV" id="_i_1" lang="" target="_blank"><span><span>。</span></span></a></p>
</div>
<h3>Lab Activity(實驗活動)</h3>
<div class="section section-lab" id="N106CF">
<div class="sectionContain">
<p id="N106D7" lang="">In this lab exercise, you should securely set up and configure a wireless router. To do so, you should change the default IP address, change the password to something more secure, and configure the wireless network. First, set up the router for a LAN. Change the IP address to 192.168.10.1, and the DHCP address range to 192.168.10.50 to 192.168.10.70. Change the router password, enable the security, and set the network key/password.</p>
<p id="N106DA" lang=""><iframe data-mce-fragment="1" frameborder="0" height="680" id="_i_2" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/webcontent/configure_wireless_router/index.html" width="810"></iframe></p>
</div>
</div>
<div actguid="d87f2faf0a0001dc69cb03eefdb32a7d" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2faf0a0001dc69cb03eefdb32a7d&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd04">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader">learn by doing</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd04">
<div class="page 482520" id="opch15_lbd04">
<div class="question" id="482520">
<div>John has asked you to install his computer on the network. Which of the following devices would you not have to install to complete his request?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582494_i1_rad_0" name="582494_i1_group" type="radio" value="A"/><label for="582494_i1_rad_0">A network interface card</label></span><span class="radioContainer clearfix"><input id="582494_i1_rad_1" name="582494_i1_group" type="radio" value="B"/><label for="582494_i1_rad_1">An AGP adapter card</label></span><span class="radioContainer clearfix"><input id="582494_i1_rad_2" name="582494_i1_group" type="radio" value="C"/><label for="582494_i1_rad_2">A wireless card</label></span></div>
</div>
<a alt="Click for hint" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556320" title="Click for hint"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2faf0a0001dc69cb03eefdb32a7d"></div>
</div>
</div>
</div>
<div actguid="d87f2fb00a0001dc077a33e9ef8eb2ba" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fb00a0001dc077a33e9ef8eb2ba&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt05">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader">did I get this</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt05">
<div class="page 482590" id="opch15_digt05">
<div class="question" id="482590">
<div>Which command line tool is used to confirm a PC’s IP address?</div>
<div class="i1"><span class="component"><input class="medium" id="i1" type="text"/></span></div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fb00a0001dc077a33e9ef8eb2ba"></div>
</div>
</div>
</div>
<div class="activitywrap purpose checkpoint wbactivity">
<div class="activityhead">
<div class="purposeType purposecheckpoint" title=""><span class="scnReader">checkpoint</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity wbactivity" id="N10721">
<p id="N10726" lang="">Take a minute to stop and reflect on your progress for this learning objective.</p>
<div actguid="d87f2fb40a0001dc339a7fc089835fe9" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fb40a0001dc339a7fc089835fe9&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap compositeNest flash" id="dpch15_checkpoint3">
<div class="activityhead">
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_checkpoint3">
<div class="page 482748" id="opch15_checkpoint3">
<div class="question" id="482748">
<div>Do you feel comfortable with this material and ready to move on?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582806_i1_rad_0" name="582806_i1_group" type="radio" value="A"/><label for="582806_i1_rad_0">Yes, I feel confident in my ability to meet this learning objective.</label></span><span class="radioContainer clearfix"><input id="582806_i1_rad_1" name="582806_i1_group" type="radio" value="B"/><label for="582806_i1_rad_1">No, I'd like to see some more material on this learning objective.</label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fb40a0001dc339a7fc089835fe9"></div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="section section-lab" id="N106CF">
<div class="sectionContain">
<p id="N106D7" lang=""><span>在本練習中，您應該安全地設置和配置無線路由器。為此，您應該更改默認IP地址，將密碼更改為更安全的密碼，然後配置無線網絡。首先，為局域網設置路由器。將IP地址更改為192.168.10.1，並將DHCP地址範圍更改為192.168.10.50至192.168.10.70。更改路由器密碼，啟用安全性並設置網絡密鑰/密碼。</span></p>
<p id="N106DA" lang=""><iframe data-mce-fragment="1" frameborder="0" height="680" id="_i_2" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/webcontent/configure_wireless_router/index.html" width="810"></iframe></p>
</div>
</div>
<div actguid="d87f2faf0a0001dc69cb03eefdb32a7d" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2faf0a0001dc69cb03eefdb32a7d&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch15_lbd04">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader"><span><span>通過實踐學習</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_lbd04">
<div class="page 482520" id="opch15_lbd04">
<div class="question" id="482520">
<div><span><span>約翰已要求您在網絡上安裝他的計算機。</span><span>您不需要安裝以下哪些設備來完成他的請求？</span></span></div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582494_i1_rad_0" name="582494_i1_group" type="radio" value="A"/><label for="582494_i1_rad_0"><span><span>網絡接口卡</span></span></label></span><span class="radioContainer clearfix"><input id="582494_i1_rad_1" name="582494_i1_group" type="radio" value="B"/><label for="582494_i1_rad_1"><span><span>AGP適配卡</span></span></label></span><span class="radioContainer clearfix"><input id="582494_i1_rad_2" name="582494_i1_group" type="radio" value="C"/><label for="582494_i1_rad_2"><span><span>無線網卡</span></span></label></span></div>
</div>
<a alt="點擊提示" class="fa iconHint" href="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH15/x-oli-workbook_page/javascript();" rel="556320" title="點擊提示"></a></div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2faf0a0001dc69cb03eefdb32a7d"></div>
</div>
</div>
</div>
<div actguid="d87f2fb00a0001dc077a33e9ef8eb2ba" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fb00a0001dc077a33e9ef8eb2ba&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch15_digt05">
<div class="activityhead">
<div class="purposeType purposedidigetthis" title=""><span class="scnReader"><span><span>我得到這個了嗎</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_digt05">
<div class="page 482590" id="opch15_digt05">
<div class="question" id="482590">
<div><span><span>哪個命令行工具用於確認PC的IP地址？</span></span></div>
<div class="i1"><span class="component"><input class="medium" id="i1" type="text"/></span></div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fb00a0001dc077a33e9ef8eb2ba"></div>
</div>
</div>
</div>
<div class="activitywrap purpose checkpoint wbactivity">
<div class="activityhead">
<div class="purposeType purposecheckpoint" title=""><span class="scnReader"><span><span>檢查站</span></span></span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity wbactivity" id="N10721">
<p id="N10726" lang=""><span><span>花一點時間停下來，為這個學習目標反思自己的進步。</span></span></p>
<div actguid="d87f2fb40a0001dc339a7fc089835fe9" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2fb40a0001dc339a7fc089835fe9&amp;userGUID=40923148%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap compositeNest flash" id="dpch15_checkpoint3">
<div class="activityhead">
<div class="activityinfo"></div>
</div>
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch15_checkpoint3">
<div class="page 482748" id="opch15_checkpoint3">
<div class="question" id="482748">
<div>Do you feel comfortable with this material and ready to move on?</div>
<div class="i1">
<div class="component"><span class="radioContainer clearfix"><input id="582806_i1_rad_0" name="582806_i1_group" type="radio" value="A"/><label for="582806_i1_rad_0">Yes, I feel confident in my ability to meet this learning objective.</label></span><span class="radioContainer clearfix"><input id="582806_i1_rad_1" name="582806_i1_group" type="radio" value="B"/><label for="582806_i1_rad_1">No, I'd like to see some more material on this learning objective.</label></span></div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2fb40a0001dc339a7fc089835fe9"></div>
<p></p>
<h1>HW2</h1>
<p>由於部分學員在建立 Github 帳號時, 無法使用學號登記帳號, 因此造成<span> </span><a href="http://mde.tw/cp2020/content/W3.html">W3</a><span> </span>部分分組組員的倉儲與網站連結產生錯誤, 今已知乙班的原始分組數列如下:</p>
<p><span>一乙:</span></p>
<p><span>[[40823148, 40923203, 40923208, 40923209, 40923210, 40923223, 40923225, 40923230, 40923238, 40923239, 40923244, 40923249], [40523148, 40923201, 40923202, 40923218, 40923219, 40923228, 40923231, 40923232, 40923240, 40923247, 40923248, 40923250], [40823152, 40923205, 40923212, 40923214, 40923217, 40923226, 40923236, 40923241, 40923242, 40923246, 40923251], [40723217, 40728238, 40923206, 40923216, 40923220, 40923227, 40923233, 40923237, 40923243, 40923252, 40923253], [40523138, 40923204, 40923207, 40923211, 40923213, 40923221, 40923224, 40923229, 40923234, 40923235, 40923245]]</span></p>
<p>但是一甲的分組數列當時並未能儲存.</p>
<p>另外, 從亂數分組頁面可以從<a href="https://github.com/mdecourse/nfulist">教務處伺服器與 Heroku</a><span> </span>上的網站結合下取得兩班最終修課學員名單:</p>
<p>四技設一甲計算機程式學員名單:</p>
<p><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762</a></p>
<h4>參考資料:</h4>
<p>變數: <a href="https://books.trinket.io/pfe/02-variables.html">https://books.trinket.io/pfe/02-variables.html</a> </p>
<p>條件式: <a href="https://books.trinket.io/pfe/03-conditional.html">https://books.trinket.io/pfe/03-conditional.html</a> </p>
<p>重複迴圈:<span> </span><a href="https://books.trinket.io/pfe/05-iterations.html">https://books.trinket.io/pfe/05-iterations.html</a> </p>
<p>數列: <a href="https://books.trinket.io/pfe/08-lists.html">https://books.trinket.io/pfe/08-lists.html</a> </p>
<p>開啟檔案:<span> </span><a href="https://books.trinket.io/pfe/07-files.html">https://books.trinket.io/pfe/07-files.html </a></p>
<p>超文件: <a href="https://www.w3schools.com/html/">https://www.w3schools.com/html/</a> </p>
<p>bs4: <a href="https://readthedocs.org/projects/beautiful-soup-4/downloads/pdf/latest/">https://readthedocs.org/projects/beautiful-soup-4/downloads/pdf/latest/</a> </p>
<p>解題參考:<span> </span><a href="https://www.kaggle.com/mdecourse/cp2020-hw2">https://www.kaggle.com/mdecourse/cp2020-hw2</a> </p>
<p></p>
<h2>HW2之一</h2>
<p><span>請問該如何取得與上述一乙相同格式的一甲分組數列? 請詳細說明解題步驟後列出一甲的分組數列.</span></p>
<p>設計一甲</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_19971">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">urllib.request</code></div>
<div class="line number2 index1 alt1"><code class="py plain">url </code><code class="py keyword">=</code> <code class="py string">"https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762"</code></div>
<div class="line number3 index2 alt2"><code class="py plain">cp1a </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">for</code> <code class="py plain">line </code><code class="py keyword">in</code> <code class="py plain">urllib.request.urlopen(url):</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">cp1a.append(</code><code class="py functions">int</code><code class="py plain">(line.decode(</code><code class="py string">'utf-8'</code><code class="py plain">).rstrip()))</code></div>
<div class="line number6 index5 alt1"><code class="py functions">print</code><code class="py plain">(cp1a)</code></div>
<div class="line number7 index6 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"總共有"</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(</code><code class="py functions">len</code><code class="py plain">(cp1a)) </code><code class="py keyword">+</code> <code class="py string">" 筆"</code><code class="py plain">)</code></div>
<div class="line number8 index7 alt1"><code class="py plain">total </code><code class="py keyword">=</code> <code class="py functions">len</code><code class="py plain">(cp1a)</code></div>
<div class="line number9 index8 alt2"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(total):</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"http://github.com/"</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(cp1a[i]) </code><code class="py keyword">+</code> <code class="py string">"/cp2020"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>1. import urllib.request</p>
<p>    <span class="c1">導入 urllib.request:<span> </span><a href="https://docs.python.org/3/library/urllib.request.html">https://docs.python.org/3/library/urllib.request.html</a></span></p>
<p>    並且透過<span class="c1">urllib.request 模組中的 urlopen() 開啟網路 url 連結資料</span></p>
<p><span class="c1">2. url = "https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762"</span></p>
<p><span class="c1">    設定名單的源頭從<span><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762%E9%80%99%E5%80%8B%E7%B6%B2%E5%9D%80%E4%BE%86">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762這個網址來</a></span></span></p>
<p><span class="c1"><span>3.cp1a = []</span></span></p>
<p><span class="c1"><span>   設定cp1a這個數列</span></span></p>
<p><span class="c1"><span>4. for line in urllib.request.urlopen(url):<br/>    cp1a.append(int(line.decode('utf-8').rstrip()))</span></span></p>
<p>    透過 urllib.request模組裡的urlopen()取下網際資料但由於資料為binary格式所以必須使用utf-8進行      編碼將它轉換成我們可看得懂的數字</p>
<p>5. print(cp1a)</p>
<p>    顯示cp1a , 由於前面有定義數列了所以cp1a的資料將以數列方式呈現</p>
<p>6. print("總共有" + str(len(cp1a)) + " 筆")</p>
<p>    顯示 <span>總共有+字串cp1a的資料數+筆</span></p>
<p><span>7. total = len(cp1a)</span></p>
<p><span>    設定total為cp1a資料數</span></p>
<p><span>8. for i in range(total):<br/>    print("http://github.com/" + str(cp1a[i]) + "/cp2020")</span></p>
<p>    用迴圈下去跑(total的資料數)相同的次數 </p>
<p>    並顯示<span>http://github.com/+ cp1a資料裡每個數據 + /cp2020</span></p>
<p><span><img alt="" height="747" src="https://40923123.github.io/cp2020/images/gSD0AlEkwh.png" width="917"/></span></p>
<h2>HW2之二</h2>
<p><span>請問根據上述原始分組資料與最終教務處的選課學員名單, 兩班課程中是否有人加選或者退選? 請說明解題方法與結果.</span></p>
<p><span></span></p>
<h2>HW2之三</h2>
<p><span>從倉儲 </span><a href="https://github.com/mdecourse/cp2020/tree/master/downloads/hw2">downloads/hw2</a><span><span> </span>目錄中可以找到兩班各學員實際登記 Github 的帳號資料, 例如:<span> </span></span><a href="https://github.com/mdecourse/cp2020/blob/master/downloads/hw2/cpb_github_account.txt">一乙學號與 Github 帳號對照表</a><span>, 請問該如何利用程式方法產生正確的 </span><a href="http://mde.tw/cp2020/content/W3.html">W3</a><span> 網頁 html 資料?</span></p>
<p><span></span></p>
<h1>HW3</h1>
<p>作業三 (Due. 各班 第十四週上課之前):</p>
<p>請各組採分工方式, 以英文及中文對照方式完成<span> </span><a href="https://www.practicepython.org/">https://www.practicepython.org/</a><span> </span>中各題目的練習與資料整理, 請將圖文資料放入各分組組長的分組網頁中 (cp2020ag1 為甲班第一組倉儲名稱, 其餘類推), 並將分組網站連結回報至<span> </span><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a></p>
<ul>
<li>1:<span> </span><a href="https://www.practicepython.org/exercise/2014/01/29/01-character-input.html">Character Input</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>2:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html">Odd Or Even</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>3:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/15/03-list-less-than-ten.html">List Less Than Ten</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>4:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html">Divisors</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>5:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html">List Overlap</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>6:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/12/06-string-lists.html">String Lists</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>7:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html">List Comprehensions</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>8:<span> </span><a href="https://www.practicepython.org/exercise/2014/03/26/08-rock-paper-scissors.html">Rock Paper Scissors</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>9:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/02/09-guessing-game-one.html">Guessing Game One</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>10:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html">List Overlap Comprehensions</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>11:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/16/11-check-primality-functions.html">Check Primality Functions</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>12:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/25/12-list-ends.html">List Ends</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>13:<span> </span><a href="https://www.practicepython.org/exercise/2014/04/30/13-fibonacci.html">Fibonacci</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>14:<span> </span><a href="https://www.practicepython.org/exercise/2014/05/15/14-list-remove-duplicates.html">List Remove Duplicates</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>15:<span> </span><a href="https://www.practicepython.org/exercise/2014/05/21/15-reverse-word-order.html">Reverse Word Order</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>16:<span> </span><a href="https://www.practicepython.org/exercise/2014/05/28/16-password-generator.html">Password Generator</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>17:<span> </span><a href="https://www.practicepython.org/exercise/2014/06/06/17-decode-a-web-page.html">Decode A Web Page</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>18:<span> </span><a href="https://www.practicepython.org/exercise/2014/07/05/18-cows-and-bulls.html">Cows And Bulls</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>19:<span> </span><a href="https://www.practicepython.org/exercise/2014/07/14/19-decode-a-web-page-two.html">Decode A Web Page Two</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>20:<span> </span><a href="https://www.practicepython.org/exercise/2014/11/11/20-element-search.html">Element Search</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>21:<span> </span><a href="https://www.practicepython.org/exercise/2014/11/30/21-write-to-a-file.html">Write To A File</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>22:<span> </span><a href="https://www.practicepython.org/exercise/2014/12/06/22-read-from-file.html">Read From File</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>23:<span> </span><a href="https://www.practicepython.org/exercise/2014/12/14/23-file-overlap.html">File Overlap</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>24:<span> </span><a href="https://www.practicepython.org/exercise/2014/12/27/24-draw-a-game-board.html">Draw A Game Board</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>25:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/01/25-guessing-game-two.html">Guessing Game Two</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>26:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/16/26-check-tic-tac-toe.html">Check Tic Tac Toe</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>27:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/26/27-tic-tac-toe-draw.html">Tic Tac Toe Draw</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>28:<span> </span><a href="https://www.practicepython.org/exercise/2016/03/27/28-max-of-three.html">Max Of Three</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>29:<span> </span><a href="https://www.practicepython.org/exercise/2016/08/03/29-tic-tac-toe-game.html">Tic Tac Toe Game</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>30:<span> </span><a href="https://www.practicepython.org/exercise/2016/09/24/30-pick-word.html">Pick Word</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>31:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html">Guess Letters</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>32:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/10/32-hangman.html">Hangman</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>33:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html">Birthday Dictionaries</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>34:<span> </span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">Birthday Json</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>35:<span> </span><a href="https://www.practicepython.org/exercise/2017/02/28/35-birthday-months.html">Birthday Months</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
<li>36:<span> </span><a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html">Birthday Plots</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></li>
</ul>
<p>圖書館電子書選讀:</p>
<p>Artificial Intelligence Basics:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-5028-0">https://link.springer.com/book/10.1007/978-1-4842-5028-0</a> (2019)</p>
<p>Neural Network and Deep Learning:</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-94463-0">https://link.springer.com/book/10.1007/978-3-319-94463-0</a> (2018)</p>
<p>Computer Vision Metrics:</p>
<p><a href="https://link.springer.com/book/10.1007/978-3-319-33762-3">https://link.springer.com/book/10.1007/978-3-319-33762-3</a> (2016)</p>
<p>Genetic Algorithms:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4471-0577-0">https://link.springer.com/book/10.1007/978-1-4471-0577-0</a> (1999)</p>
<p></p>
<p></p>
<div id="tipue_search_content">
<h2>P10</h2>
<p>List Overlap comprehensions</p>
<div class="activitywrap purpose learnbydoing flash"></div>
<div class="activitywrap purpose learnbydoing flash">Exercise 10 (and<span> </span><a href="https://www.practicepython.org/solution/2014/04/16/10-list-overlap-comprehensions-solutions.html">Solution</a>)
<p>This week’s exercise is going to be revisiting an old exercise (see<span> </span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html">Exercise 5</a>), except require the solution in a different way.</p>
<p>Take two lists, say for example these two:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
	<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p>and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes. Write this<span> </span><s>in one line of Python</s><span> </span><em>using at least one list comprehension</em>. (<em>Hint: Remember<span> </span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html">list comprehensions</a><span> </span>from Exercise 7</em>).</p>
<p><em>The original formulation of this exercise said to write the solution using one line of Python, but a few readers pointed out that this was impossible to do without using<span> </span><code class="highlighter-rouge">set</code>s that I had not yet discussed on the blog, so you can either choose to use the original directive and read about the<span> </span><a href="https://docs.python.org/3.3/library/stdtypes.html?highlight=set#set"><code class="highlighter-rouge">set</code><span> </span>command in Python 3.3</a>, or try to implement this on your own and use at least one list comprehension in the solution.</em></p>
<p>Extra:</p>
<ul>
<li>Randomly generate two lists to test this</li>
</ul>
Discussion
<p>Concepts for this week:</p>
<ul>
<li>List comprehensions</li>
<li>Random numbers, continued</li>
</ul>
List comprehensions
<p>We already discussed list comprehensions in<span> </span><a href="http://practicepython.blogspot.com/2014/03/exercise-7-list-comprehensions.html">Exercise 7</a>, but they can be made much more complicated.</p>
<p>For example:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
	<span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">]</span>
	<span class="n">allproducts</span> <span class="o">=</span> <span class="p">[</span><span class="n">a</span><span class="o">*</span><span class="n">b</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">x</span> <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">y</span><span class="p">]</span></code></pre>
</figure>
<p>At the end of this piece of code,<span> </span><code class="highlighter-rouge">allproducts</code><span> </span>will contain the list<span> </span><code class="highlighter-rouge">[5, 10, 15, 10, 20, 30, 15, 30, 45]</code>. So you can put multiple for loops inside the comprehension. But you can also add more complicated conditionals:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
	<span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">]</span>
	<span class="n">customlist</span> <span class="o">=</span> <span class="p">[</span><span class="n">a</span><span class="o">*</span><span class="n">b</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">x</span> <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">y</span> <span class="k">if</span> <span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">%</span><span class="mi">2</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">]</span></code></pre>
</figure>
<p>Now<span> </span><code class="highlighter-rouge">customlist</code><span> </span>contains<span> </span><code class="highlighter-rouge">[5, 15, 15, 45]</code><span> </span>because only the odd products are added to the list.</p>
<p>In general, the list comprehension takes the form:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="p">[</span><span class="n">EXPRESSION</span> <span class="n">FOR_LOOPS</span> <span class="n">CONDITIONALS</span><span class="p">]</span></code></pre>
</figure>
<p>as shown in the examples above.</p>
Random numbers, continued
<p>Try to use the<span> </span><a href="https://docs.python.org/3.0/library/random.html">Python random documentation</a><span> </span>to figure out how to generate a random list. As a hint look below:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">),</span> <span class="mi">5</span><span class="p">)</span></code></pre>
</figure>
<p>This line of code will leave<span> </span><code class="highlighter-rouge">a</code><span> </span>containing a list of 5 random numbers from 0 to 99.</p>
列表重疊理解<br/><span></span><span><span>練習10（和</span></span><a href="https://www.practicepython.org/solution/2014/04/16/10-list-overlap-comprehensions-solutions.html"><span><span>解決方案</span></span></a><span><span>）</span></span>
<p><span><span>本週的練習將重溫舊的練習（請參閱</span></span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html"><span><span>練習5</span></span></a><span><span>），只是需要以其他方式解決。</span></span></p>
<p><span><span>拿兩個列表，舉例來說，這兩個：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
	<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>並編寫一個程序，該程序返回一個列表，該列表僅包含列表之間的公共元素（無重複項）。</span><span>確保您的程序可以在兩個不同大小的列表上運行。</span><em><span>使用至少一個列表理解</span></em></span><s><span><span>語句在一行Python中</span></span></s><span> </span><span><span>編寫</span><span>。</span><span>（</span><em><span>提示：記住</span></em><em><span>練習7中的</span></em><em><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html"><span>列表理解</span></a></em><span>）。</span></span><em><span></span></em><span></span><em><span></span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html"><span></span></a><span></span></em><span></span></p>
<p><em><span><span>此練習的原始表述是使用一行Python編寫解決方案，但是一些讀者指出，如果不使用</span></span><code class="highlighter-rouge">set</code><span><span>我尚未在博客上討論過的s，</span><span>則不可能做到這一點</span><span>，因此您可以選擇使用原始指令，並閱讀</span></span><a href="https://docs.python.org/3.3/library/stdtypes.html?highlight=set#set"><code class="highlighter-rouge">set</code><span><span>Python 3.3中</span></span></a><span><span>的</span><a href="https://docs.python.org/3.3/library/stdtypes.html?highlight=set#set"><span>命令</span></a><span>，或者嘗試自己實現該</span><span>指令並</span><span>在解決方案中至少使用一個列表理解。</span></span></em></p>
<p><span><span>額外：</span></span></p>
<ul>
<li><span><span>隨機生成兩個列表進行測試</span></span></li>
</ul>
<span><span>討論區</span></span>
<p><span><span>本週的概念：</span></span></p>
<ul>
<li><span><span>清單理解</span></span></li>
<li><span><span>隨機數，續</span></span></li>
</ul>
<span><span>清單理解</span></span>
<p><span><span>我們已經在</span></span><a href="http://practicepython.blogspot.com/2014/03/exercise-7-list-comprehensions.html"><span><span>練習7中</span></span></a><span><span>討論了列表理解</span><span>，但是可以使它們複雜得多。</span></span></p>
<p><span><span>例如：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
	<span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">]</span>
	<span class="n">allproducts</span> <span class="o">=</span> <span class="p">[</span><span class="n">a</span><span class="o">*</span><span class="n">b</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">x</span> <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">y</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>在這段代碼的最後，</span></span><code class="highlighter-rouge">allproducts</code><span><span>將包含list<span> </span></span></span><code class="highlighter-rouge">[5, 10, 15, 10, 20, 30, 15, 30, 45]</code><span><span>。</span><span>因此，您可以在理解中放入多個for循環。</span><span>但是您還可以添加更複雜的條件：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
	<span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">]</span>
	<span class="n">customlist</span> <span class="o">=</span> <span class="p">[</span><span class="n">a</span><span class="o">*</span><span class="n">b</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">x</span> <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">y</span> <span class="k">if</span> <span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">%</span><span class="mi">2</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>現在</span></span><code class="highlighter-rouge">customlist</code><span><span>包含，</span></span><code class="highlighter-rouge">[5, 15, 15, 45]</code><span><span>因為僅將奇數產品添加到列表中。</span></span></p>
<p><span><span>通常，列表理解採用以下形式：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="p">[</span><span class="n">EXPRESSION</span> <span class="n">FOR_LOOPS</span> <span class="n">CONDITIONALS</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>如以上示例所示。</span></span></p>
<span><span>隨機數，續</span></span>
<p><span><span>嘗試使用</span></span><a href="https://docs.python.org/3.0/library/random.html"><span><span>Python隨機文檔</span></span></a><span><span>來弄清楚如何生成隨機列表。</span><span>提示如下：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">),</span> <span class="mi">5</span><span class="p">)</span></code></pre>
</figure>
<p><span><span>這行代碼將</span></span><code class="highlighter-rouge">a</code><span><span>包含從0到99的5個隨機數的列表。</span></span></p>
回顧
<p><span><span>函數的作用是包裝我們要重用的一段代碼，對其進行標記，並允許我們相對容易地再次使用它。</span><span>您可以將變量添加到函數中，以使代碼更加可重用，並且可以將默認參數添加到這些變量中。</span></span></p>
<p><span><span>一開始處理函數有點奇怪，但是一旦掌握了這些函數，它們將成為編程的救星。</span><span>此外，學習編程的重點是抽象，解決問題，分解問題，而這正是功能的全部所在。</span></span></p>
</div>
<div id="tipue_search_content">
<div id="tipue_search_content"></div>
<div class="activitywrap purpose learnbydoing flash">
<ul>
<li>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-meta">
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-2-py"></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</li>
</ul>
</div>
</div>
<h2>P11</h2>
check primality functions<br/>Exercise 11 (and<span> </span><a href="https://www.practicepython.org/solution/2014/04/16/11-check-primality-functions-solutions.html">Solution</a>)
<p>Ask the user for a number and determine whether the number is prime or not. (For those who have forgotten, a prime number is a number that has no divisors.). You can (and should!) use your answer to<span> </span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html">Exercise 4</a><span> </span>to help you. Take this opportunity to practice using functions, described below.</p>
Discussion
<p>Concepts for this week:</p>
<ul>
<li>Functions</li>
<li>Reusable functions</li>
<li>Default arguments</li>
</ul>
Functions
<p>One of the tools programming gives us is the ability to break down problems into easier (or perhaps previously solved) or reusable subproblems. It is good practice to have a function have a single purpose, and the name of that function should hint at it’s purpose in some way.</p>
<p>Most programming languages have this idea of a function, subroutine, or subprogram. In Python, a function is a programming construct that allows exactly that.</p>
<p>Let’s look at a simple example:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"Give me a number: "</span><span class="p">))</span></code></pre>
</figure>
<p>In this small example, we used the same code that asks a user for input as a tabbed line underneath this<span> </span><code class="highlighter-rouge">def</code><span> </span>statement. The<span> </span><code class="highlighter-rouge">def</code><span> </span>means that everything tabbed underneath is a function. The name<span> </span><code class="highlighter-rouge">get_integer()</code><span> </span>is just a name that I (the programmer) made up. If I just include this code inside a Python file and run it, nothing will happen - all I have done so far is wrapped my code inside of a function; I never told my program to actually RUN my function.</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"Give me a number: "</span><span class="p">))</span>

  <span class="n">age</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">()</span>
  <span class="n">school_year</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">()</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are over the age of 15"</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You are in grade "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">school_year</span><span class="p">))</span></code></pre>
</figure>
<p>What I have done here is<span> </span><em>called</em><span> </span>the function (told it to run) by writing<span> </span><code class="highlighter-rouge">age = get_integer()</code>. When this line of code runs, what happens is the program will<span> </span><em>execute</em><span> </span>(run) the function by asking me for a number, then<span> </span><em>returning</em><span> </span>it (giving it back to me) by saving it inside the variable<span> </span><code class="highlighter-rouge">age</code>. Now when I want to ask the user for another number (this time representing the school year), I do the same thing with the variable<span> </span><code class="highlighter-rouge">school_year</code>.</p>
Reusable functions
<p>This is all well and good, but I can make my function do much more for me. Right now, my function will always ask the user for a number by printing the string<span> </span><code class="highlighter-rouge">"Give me a number: "</code>. What if I want to print a different string every time I ask the user for a number, but otherwise use the same idea for the function? In other words, I want a variable parameter in my function that changes every time I call the function based on something I (the programmer) want to be different.</p>
<p>I can do this by<span> </span><em>passing</em><span> </span>(giving) my function a variable. Like this:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span></code></pre>
</figure>
<p>Now what I can do when I call the function is something like this:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span>

  <span class="n">age</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">(</span><span class="s">"Tell me your age: "</span><span class="p">)</span>
  <span class="n">school_year</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">(</span><span class="s">"What grade are you in? "</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are over the age of 15"</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You are in grade "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">school_year</span><span class="p">))</span></code></pre>
</figure>
<p>Now it is easier for a user to use the program, because the help text is different.</p>
<p>These variables you pass to functions are called<span> </span><em>variables</em>,<span> </span><em>parameters</em>, or<span> </span><em>arguments</em>.</p>
Default arguments
<p>In the example above, once I have added an<span> </span><em>argument</em><span> </span>to my function, I always have to give an argument when I call the function. I can’t forget to give the<span> </span><code class="highlighter-rouge">get_integer()</code><span> </span>function from above a string to print to the screen. In some cases, I want there to be a “default” behavior for my function that happens when I create an argument for it but don’t give it any.</p>
<p>In the example above, if I don’t give a custom string (which may be 95% of the time I use this function), I just want the<span> </span><code class="highlighter-rouge">input()</code><span> </span>line to say<span> </span><code class="highlighter-rouge">"Give me a number: "</code><span> </span>and I want to save myself the trouble of writing this every single time I call the function. So what I can do is give my function<span> </span><em>default arguments</em>. Like so:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="o">=</span><span class="s">"Give me a number: "</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span></code></pre>
</figure>
<p>What happens now is I can use the function in two ways: by giving it an argument and by NOT giving it an argument.</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="o">=</span><span class="s">"Give me a number: "</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span>

  <span class="n">age</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">(</span><span class="s">"Tell me your age: "</span><span class="p">)</span>
  <span class="n">school_year</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">()</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are over the age of 15"</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You are in grade "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">school_year</span><span class="p">))</span></code></pre>
</figure>
<p>The first time I call the function, it will print<span> </span><code class="highlighter-rouge">"Tell me your age: "</code>, but the second time, it will print<span> </span><code class="highlighter-rouge">"Give me a number: "</code>, because I did not give it a string and it will execute the default behavior.</p>
Recap
<p>What a function does is wrap a piece of code that we want to reuse, labels it, and allows us to use it again relatively easily. You can add variables to the functions to make your code even MORE reusable, and you can add default arguments to these variables.</p>
<p>Functions are a bit strange to deal with at first, but once you master them, they will be your savior in programming. Besides, the whole point of learning programming is abstraction, problem solving, breaking down problems, and that’s exactly what functions are all about.</p>
檢查基本功能</div>
<div class="activitywrap purpose learnbydoing flash"><span></span><span><span>練習11（和</span></span><a href="https://www.practicepython.org/solution/2014/04/16/11-check-primality-functions-solutions.html"><span><span>解決方案</span></span></a><span><span>）</span></span>
<p><span><span>向用戶詢問一個數字，並確定該數字是否為質數。</span><span>（對於那些忘記的人，質數是沒有除數的數。）</span><span>您可以（並且應該！）使用</span></span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html"><span><span>練習4</span></span></a><span><span>的答案</span><span>來幫助您。</span><span>藉此機會練習使用如下所述的功能。</span></span></p>
<span><span>討論區</span></span>
<p><span><span>本週的概念：</span></span></p>
<ul>
<li><span><span>職能</span></span></li>
<li><span><span>可重用功能</span></span></li>
<li><span><span>默認參數</span></span></li>
<li>職能</li>
</ul>
<p><span><span>編程提供給我們的工具之一是能夠將問題分解為更簡單（或可能先前解決）或可重用的子問題。</span><span>優良作法是使一個函數具有單一目的，並且該函數的名稱應以某種方式暗示其目的。</span></span></p>
<p><span><span>大多數編程語言都具有函數，子例程或子程序的概念。</span><span>在Python中，函數是一種允許這樣做的編程構造。</span></span></p>
<p><span><span>讓我們看一個簡單的例子：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"Give me a number: "</span><span class="p">))</span></code></pre>
</figure>
<p><span><span>在這個小示例中，我們使用了相同的代碼來要求用戶輸入此</span></span><code class="highlighter-rouge">def</code><span><span>語句</span><span>下方的選項卡行</span><span>。</span><span>的</span></span><code class="highlighter-rouge">def</code><span><span>手段，一切選項卡式下面是一個函數。</span><span>這個名字</span></span><code class="highlighter-rouge">get_integer()</code><span><span>只是我（程序員）組成的名字。</span><span>如果我只是將此代碼包含在Python文件中並運行它，則將不會發生任何事情-到目前為止，我所做的一切都將我的代碼包裝在一個函數中；</span><span>我從未告訴過我的程序實際運行我的功能。</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"Give me a number: "</span><span class="p">))</span><span></span>
<span></span>
  <span class="n">age</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">()</span>
  <span class="n">school_year</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">()</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are over the age of 15"</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You are in grade "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">school_year</span><span class="p">))</span></code></pre>
</figure>
<p><span><span>我在這裡所做的事情</span><span>通過編寫</span></span><em><span><span>稱為</span></span></em><span><span>函數（告訴它運行）</span></span><code class="highlighter-rouge">age = get_integer()</code><span><span>。</span><span>當這行代碼運行時，程序將</span><span>通過詢問我一個數字</span><span>來</span></span><em><span><span>執行</span></span></em><span><span>（運行）該函數，然後</span></span><em><span><span>將</span></span></em><span><span>其保存在變量中以將其</span><em><span>返回</span></em><span>（返還給我）</span></span><code class="highlighter-rouge">age</code><span><span>。</span><span>現在，當我想問用戶另一個數字（這次代表學年）時，我對變量做了同樣的事情</span></span><code class="highlighter-rouge">school_year</code><span><span>。</span></span></p>
<span><span>可重用功能</span></span>
<p><span><span>這一切都很好，但是我可以讓我的功能為我做更多的事情。</span><span>現在，我的函數將始終通過打印字符串向用戶詢問一個數字</span></span><code class="highlighter-rouge">"Give me a number: "</code><span><span>。</span><span>如果我想每次問用戶一個數字時都想打印一個不同的字符串，但對於該函數使用相同的想法怎麼辦？</span><span>換句話說，我希望函數中的變量參數在每次調用函數時都根據我（程序員）希望與眾不同的事物而改變。</span></span></p>
<p><span><span>我可以通過</span></span><em><span><span>傳遞</span></span></em><span><span>（給我的）函數一個變量</span><span>來做到這一點</span><span>。</span><span>像這樣：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span></code></pre>
</figure>
<p><span><span>現在，我在調用該函數時可以執行的操作如下：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span><span></span>
<span></span>
  <span class="n">age</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">(</span><span class="s">"Tell me your age: "</span><span class="p">)</span>
  <span class="n">school_year</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">(</span><span class="s">"What grade are you in? "</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are over the age of 15"</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You are in grade "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">school_year</span><span class="p">))</span></code></pre>
</figure>
<p><span><span>現在，由於幫助文本不同，因此使用戶更容易使用該程序。</span></span></p>
<p><span><span>傳遞給函數的這些變量稱為</span></span><em><span><span>變量</span></span></em><span><span>，</span></span><em><span><span>參數</span></span></em><span><span>或</span></span><em><span><span>參數</span></span></em><span><span>。</span></span></p>
<span><span>默認參數</span></span>
<p><span><span>在上面的示例中，在</span><span>向函數</span><span>添加</span></span><em><span><span>參數後</span></span></em><span><span>，在調用函數時始終必須提供參數。</span><span>我不能忘記</span></span><code class="highlighter-rouge">get_integer()</code><span><span>從字符串上方</span><span>給</span><span>函數打印到屏幕上。</span><span>在某些情況下，我希望函數有一種“默認”行為，這種行為會在為它創建參數但不給出任何參數時發生。</span></span></p>
<p><span><span>在上面的示例中，如果我不提供自定義字符串（可能占我使用此函數的時間的95％），我只想讓</span></span><code class="highlighter-rouge">input()</code><span><span>行說出來，</span></span><code class="highlighter-rouge">"Give me a number: "</code><span><span>並且省去了每次編寫此</span><span>字符串</span><span>的麻煩我稱這個功能。</span><span>所以我能做的就是給我的函數</span></span><em><span><span>默認參數</span></span></em><span><span>。</span><span>像這樣：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="o">=</span><span class="s">"Give me a number: "</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span></code></pre>
</figure>
<p><span><span>現在發生的事情是我可以通過兩種方式使用該函數：通過給它一個參數和不給它一個參數。</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">def</span> <span class="nf">get_integer</span><span class="p">(</span><span class="n">help_text</span><span class="o">=</span><span class="s">"Give me a number: "</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="n">help_text</span><span class="p">))</span><span></span>
<span></span>
  <span class="n">age</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">(</span><span class="s">"Tell me your age: "</span><span class="p">)</span>
  <span class="n">school_year</span> <span class="o">=</span> <span class="n">get_integer</span><span class="p">()</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are over the age of 15"</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You are in grade "</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">school_year</span><span class="p">))</span></code></pre>
</figure>
<p><span><span>第一次調用該函數，它將打印</span></span><code class="highlighter-rouge">"Tell me your age: "</code><span><span>，但是第二次，它將打印</span></span><code class="highlighter-rouge">"Give me a number: "</code><span><span>，因為我沒有給它一個字符串，它將執行默認行為。</span></span></p>
</div>
<p></p>
<p></p>
<div id="tipue_search_content">
<h2>P12</h2>
<span>List ends</span></div>
<div class="activitywrap purpose learnbydoing flash">Exercise 12 (and<span> </span><a href="https://www.practicepython.org/solution/2014/05/15/12-list-ends-solutions.html">Solution</a>)
<p>Write a program that takes a list of numbers (for example,<span> </span><code class="highlighter-rouge">a = [5, 10, 15, 20, 25]</code>) and makes a new list of only the first and last elements of the given list. For practice, write this code inside a function.</p>
Concepts to practice
<ul>
<li>Lists and properties of lists</li>
<li>List comprehensions (maybe)</li>
<li>Functions</li>
</ul>
<span><span></span></span></div>
<h4 class="activitywrap purpose learnbydoing flash"><span><span>清單結尾</span></span></h4>
<div class="activitywrap purpose learnbydoing flash"><span><span>練習12（和</span></span><a href="https://www.practicepython.org/solution/2014/05/15/12-list-ends-solutions.html"><span><span>解決方案</span></span></a><span><span>）</span></span></div>
<div class="activitywrap purpose learnbydoing flash">
<p><span><span>編寫一個程序，該程序接受一個數字列表（例如</span></span><code class="highlighter-rouge">a = [5, 10, 15, 20, 25]</code><span><span>），並製作一個僅包含給定列表的第一個和最後一個元素的新列表。</span><span>為了練習，請在函數內編寫此代碼。</span></span></p>
<span><span>練習概念</span></span>
<ul>
<li><span><span>列表和列表屬性</span></span></li>
<li><span><span>列表理解（也許）</span></span></li>
<li><span><span>職能</span></span><span><span></span></span></li>
<li>List Overlap Comprehensions Solutions<span></span><br/><i></i>P10 AII solutions<span> </span><a href="https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html"></a><a href="https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html">Exercise 10</a>
<p>This week’s exercise is going to be revisiting an old exercise (see<span> </span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html">Exercise 5</a>), except require the solution in a different way.</p>
<p>Take two lists, say for example these two:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
	<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p>and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes. Write this<span> </span><em>using at least one list comprehension</em>. (<em>Hint: Remember<span> </span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html">list comprehensions</a><span> </span>from Exercise 7</em>).</p>
<p>Extra:</p>
<ul>
<li>Randomly generate two lists to test this</li>
</ul>
Sample solution
<p>A user-submitted solution:</p>
<div class="gist" id="gist10904252">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-exercise-10">
<div class="Box-body p-0 blob-wrapper data type-text" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-exercise-10-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC1">import random</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-exercise-10-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC2"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-exercise-10-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC3">a = random.sample(range(1,30), 12)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-exercise-10-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC4">b = random.sample(range(1,30), 16)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-exercise-10-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC5">result = [i for i in a if i in b]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/anonymous/10904252/raw/02252b579b7b5d544890dadf356c941ad73e78d4/Exercise%2010">view raw</a><a href="https://gist.github.com/anonymous/10904252#file-exercise-10">Exercise 10</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>As a few commenters / readers of this blog have pointed out (thanks mainly to Gautam and Jeff), the exercise as posed is actually impossible to write in a single line of Python. The problem is this: the proposed reader solution (and the solution that I had in mind myself) as written above does not take into account the fact that there might be duplicates in the resulting list, where I specifically asked to not include duplicates. This means that in the simple example I gave above,<span> </span><code class="highlighter-rouge">a</code>’s first element is<span> </span><code class="highlighter-rouge">1</code><span> </span>will be added to the<span> </span><code class="highlighter-rouge">result</code><span> </span>list because it is in<span> </span><code class="highlighter-rouge">b</code>. But then it’s next element is also<span> </span><code class="highlighter-rouge">1</code>, and is also in<span> </span><code class="highlighter-rouge">b</code>, so will be added to the<span> </span><code class="highlighter-rouge">result</code><span> </span>list. So the solution as given (the comprehension<span> </span><code class="highlighter-rouge">[i for i in a if i in b]</code>) will not yield the correct result on the example solution.</p>
<p>Instead, as pointed out by Gautam and Jeff, the simplest way to achieve this solution would be to make sure that we are only looking at unique elements from<span> </span><code class="highlighter-rouge">a</code>, the first list in the comprehension. We have not discussed doing this easily in Python on this blog using the<span> </span><code class="highlighter-rouge">set</code><span> </span>built-in function, but if you know it, the solution will look like this:</p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">random</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">12</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC3"><span class="pl-s1">b</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">16</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC4"><span class="pl-s1">result</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">set</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">b</span>]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions.py">view raw</a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-py">list-overlap-comprehensions.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>But, to achieve the same results as asked in the original question while still using a list comprehension (however, definitely not using a single line of code), would be to make sure that there is no overlap in the new list after it is constructed, using the traditional<span> </span><code class="highlighter-rouge">for</code><span> </span>loop on lists:</p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-for-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-for-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">random</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-for-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">12</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-for-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC3"><span class="pl-s1">b</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">16</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-for-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC4"><span class="pl-s1">result_overlap</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">set</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">b</span>]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-for-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC5"><span class="pl-s1">result</span><span> </span><span class="pl-c1">=</span><span> </span>[]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-list-overlap-comprehensions-for-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC6"><span class="pl-k">for</span><span> </span><span class="pl-s1">element</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">result_overlap</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-list-overlap-comprehensions-for-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC7"><span class="pl-k">if</span><span> </span><span class="pl-s1">element</span><span> </span><span class="pl-c1">not</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">result</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-list-overlap-comprehensions-for-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC8"><span class="pl-s1">result</span>.<span class="pl-en">appent</span>(<span class="pl-s1">element</span>)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions-for.py">view raw</a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-for-py">list-overlap-comprehensions-for.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>Or, to practice list comprehensions again, this can be done with two list comprehensions:</p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-2-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-2-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">random</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-2-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">12</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-2-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC3"><span class="pl-s1">b</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">16</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-2-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC4"><span class="pl-s1">result_overlaps</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">set</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">b</span>]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-2-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC5"><span class="pl-s1">result</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">result_overlaps</span><span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">result_overlaps</span>.<span class="pl-en">count</span>(<span class="pl-s1">i</span>)<span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">1</span>]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions-2.py">view raw</a></div>
<div class="gist-meta">
<p><span>本週的練習將重溫舊的練習（請參閱</span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html"><span>練習5</span></a><span>），只是需要以其他方式解決。</span></p>
<p><span><span>拿兩個列表，舉例來說，這兩個：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
	<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>並編寫一個程序，該程序返回一個列表，該列表僅包含列表之間的公共元素（無重複項）。</span><span>確保您的程序可以在兩個不同大小的列表上運行。</span></span><em><span><span>至少使用一個列表理解來</span></span></em><span><span>寫這個</span><span>。</span><span>（</span></span><em><span><span>提示：記住</span><span>練習7中的</span></span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html"><span><span>列表理解</span></span></a><span></span></em><span><span>）。</span></span></p>
<p><span><span>額外：</span></span></p>
<ul>
<li><span><span>隨機生成兩個列表進行測試</span></span></li>
</ul>
<span><span>樣品溶液</span></span>
<p><span><span>用戶提交的解決方案：</span></span></p>
<div class="gist" id="gist10904252">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-exercise-10">
<div class="Box-body p-0 blob-wrapper data type-text" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-exercise-10-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC1"><span><span>隨機導入</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-exercise-10-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC2"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-exercise-10-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC3"><span><span>一個= random.sample（range（1,30），12）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-exercise-10-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC4"><span><span>b = random.sample（範圍（1,30），16）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-exercise-10-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC5"><span><span>結果= [如果b中有i，則a中的i代表i]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/anonymous/10904252/raw/02252b579b7b5d544890dadf356c941ad73e78d4/Exercise%2010"><span><span>查看原始</span></span></a><a href="https://gist.github.com/anonymous/10904252#file-exercise-10"><span><span>練習10</span></span></a><span><span><span> </span>由</span></span><a href="https://github.com/"><span><span>GitHub託管</span></span></a></div>
</div>
</div>
<p><span><span>正如該博客的一些評論者/讀者所指出的（主要感謝Gautam和Jeff），所提出的練習實際上不可能用Python編寫。</span><span>問題是這樣的：上面寫的建議的閱讀器解決方案（以及我自己想到的解決方案）沒有考慮到結果列表中可能存在重複項的事實，我特別要求不要包含重複項。</span><span>這意味著在我上面給出的簡單示例中，</span></span><code class="highlighter-rouge">a</code><span><span>第一個元素</span></span><code class="highlighter-rouge">1</code><span><span>將被添加到</span></span><code class="highlighter-rouge">result</code><span><span>列表中，因為它在中</span></span><code class="highlighter-rouge">b</code><span><span>。</span><span>但隨後它的下一個元素也是</span></span><code class="highlighter-rouge">1</code><span><span>，並且也在</span></span><code class="highlighter-rouge">b</code><span><span>，因此將被添加到</span></span><code class="highlighter-rouge">result</code><span><span>列表中。</span><span>因此，給定的解決方案（comprehension<span> </span></span></span><code class="highlighter-rouge">[i for i in a if i in b]</code><span><span>）將無法在示例解決方案上產生正確的結果。</span></span></p>
<p><span><span>相反，正如Gautam和Jeff所指出的那樣，實現此解決方案的最簡單方法是確保僅查看來自</span></span><code class="highlighter-rouge">a</code><span><span>理解中第一個列表的</span><span>唯一元素</span><span>。</span><span>我們沒有在此博客上使用</span></span><code class="highlighter-rouge">set</code><span><span>內置函數</span><span>討論在Python中輕鬆實現此操作的</span><span>方法，但是如果您知道，解決方案將如下所示：</span></span></p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC1"><span class="pl-k"><span></span></span><span><span class="pl-s1"><span>隨機</span></span><span class="pl-k"><span>導入</span></span></span><span class="pl-s1"><span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機的</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>12</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC3"><span class="pl-s1"><span><span>b<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>16</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC4"><span class="pl-s1"><span><span>導致</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>集</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>一</span></span></span><span><span>）</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>b</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions.py"><span><span>查看原始</span></span></a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-py"><span><span>list-overlap-comprehensions.py</span></span></a><span><span><span> </span>託管與❤通過</span></span><a href="https://github.com/"><span><span>GitHub上</span></span></a></div>
</div>
</div>
<p><span><span>但是，要在仍然使用列表理解的情況下達到與原始問題相同的結果（但是，絕對不要使用一行代碼），將確保新列表在構建後沒有重疊，使用</span></span><code class="highlighter-rouge">for</code><span><span>列表上</span><span>的傳統</span><span>循環：</span></span></p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-for-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-for-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC1"><span class="pl-k"><span></span></span><span><span class="pl-s1"><span>隨機</span></span><span class="pl-k"><span>導入</span></span></span><span class="pl-s1"><span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-for-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機的</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>12</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-for-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC3"><span class="pl-s1"><span><span>b<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>16</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-for-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC4"><span class="pl-s1"><span><span>result_overlap<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>集</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>一</span></span></span><span><span>）</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>b</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-for-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC5"><span class="pl-s1"><span><span>結果</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-list-overlap-comprehensions-for-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC6"><span class="pl-k"><span><span>對於</span></span></span><span> </span><span class="pl-s1"><span><span>元件</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>result_overlap</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-list-overlap-comprehensions-for-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC7"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>要素</span></span></span><span> </span><span class="pl-c1"><span><span>不能</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>結果</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-list-overlap-comprehensions-for-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC8"><span class="pl-s1"><span><span>結果</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>出現</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>元素</span></span></span><span><span>）</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions-for.py"><span><span>查看原始</span></span></a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-for-py"><span><span>list-overlap-comprehensions-for.py</span></span></a><span><span><span> </span>託管與❤通過</span></span><a href="https://github.com/"><span><span>GitHub上</span></span></a></div>
</div>
</div>
<p><span><span>或者，要再次練習列表推導，可以使用兩個列表推導來完成：</span></span></p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-2-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-2-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC1"><span class="pl-k"><span></span></span><span><span class="pl-s1"><span>隨機</span></span><span class="pl-k"><span>導入</span></span></span><span class="pl-s1"><span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-2-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機的</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>12</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-2-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC3"><span class="pl-s1"><span><span>b<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>16</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-2-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC4"><span class="pl-s1"><span><span>result_overlaps<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>集</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>一</span></span></span><span><span>）</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>b</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-2-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC5"><span class="pl-s1"><span><span>導致</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>result_overlaps</span></span></span><span> </span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>result_overlaps</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>數</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>i</span></span></span><span><span>）</span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</li>
</ul>
</div>
<p></p>
<h2>P10 All solutions</h2>
<div class="gist-meta">List Overlap Comprehensions Solutions
<div><i></i></div>
<a href="https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html">Exercise 10</a>
<p>This week’s exercise is going to be revisiting an old exercise (see<span> </span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html">Exercise 5</a>), except require the solution in a different way.</p>
<p>Take two lists, say for example these two:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
	<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p>and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes. Write this<span> </span><em>using at least one list comprehension</em>. (<em>Hint: Remember<span> </span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html">list comprehensions</a><span> </span>from Exercise 7</em>).</p>
<p>Extra:</p>
<ul>
<li>Randomly generate two lists to test this</li>
</ul>
Sample solution
<p>A user-submitted solution:</p>
<div class="gist" id="gist10904252">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-exercise-10">
<div class="Box-body p-0 blob-wrapper data type-text" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-exercise-10-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC1">import random</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-exercise-10-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC2"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-exercise-10-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC3">a = random.sample(range(1,30), 12)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-exercise-10-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC4">b = random.sample(range(1,30), 16)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-exercise-10-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC5">result = [i for i in a if i in b]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/anonymous/10904252/raw/02252b579b7b5d544890dadf356c941ad73e78d4/Exercise%2010">view raw</a><a href="https://gist.github.com/anonymous/10904252#file-exercise-10">Exercise 10</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>As a few commenters / readers of this blog have pointed out (thanks mainly to Gautam and Jeff), the exercise as posed is actually impossible to write in a single line of Python. The problem is this: the proposed reader solution (and the solution that I had in mind myself) as written above does not take into account the fact that there might be duplicates in the resulting list, where I specifically asked to not include duplicates. This means that in the simple example I gave above,<span> </span><code class="highlighter-rouge">a</code>’s first element is<span> </span><code class="highlighter-rouge">1</code><span> </span>will be added to the<span> </span><code class="highlighter-rouge">result</code><span> </span>list because it is in<span> </span><code class="highlighter-rouge">b</code>. But then it’s next element is also<span> </span><code class="highlighter-rouge">1</code>, and is also in<span> </span><code class="highlighter-rouge">b</code>, so will be added to the<span> </span><code class="highlighter-rouge">result</code><span> </span>list. So the solution as given (the comprehension<span> </span><code class="highlighter-rouge">[i for i in a if i in b]</code>) will not yield the correct result on the example solution.</p>
<p>Instead, as pointed out by Gautam and Jeff, the simplest way to achieve this solution would be to make sure that we are only looking at unique elements from<span> </span><code class="highlighter-rouge">a</code>, the first list in the comprehension. We have not discussed doing this easily in Python on this blog using the<span> </span><code class="highlighter-rouge">set</code><span> </span>built-in function, but if you know it, the solution will look like this:</p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">random</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">12</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC3"><span class="pl-s1">b</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">16</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC4"><span class="pl-s1">result</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">set</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">b</span>]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions.py">view raw</a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-py">list-overlap-comprehensions.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>But, to achieve the same results as asked in the original question while still using a list comprehension (however, definitely not using a single line of code), would be to make sure that there is no overlap in the new list after it is constructed, using the traditional<span> </span><code class="highlighter-rouge">for</code><span> </span>loop on lists:</p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-for-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-for-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">random</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-for-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">12</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-for-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC3"><span class="pl-s1">b</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">16</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-for-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC4"><span class="pl-s1">result_overlap</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">set</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">b</span>]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-for-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC5"><span class="pl-s1">result</span><span> </span><span class="pl-c1">=</span><span> </span>[]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-list-overlap-comprehensions-for-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC6"><span class="pl-k">for</span><span> </span><span class="pl-s1">element</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">result_overlap</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-list-overlap-comprehensions-for-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC7"><span class="pl-k">if</span><span> </span><span class="pl-s1">element</span><span> </span><span class="pl-c1">not</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">result</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-list-overlap-comprehensions-for-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC8"><span class="pl-s1">result</span>.<span class="pl-en">appent</span>(<span class="pl-s1">element</span>)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions-for.py">view raw</a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-for-py">list-overlap-comprehensions-for.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>Or, to practice list comprehensions again, this can be done with two list comprehensions:</p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-2-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-2-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">random</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-2-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">12</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-2-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC3"><span class="pl-s1">b</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s1">random</span>.<span class="pl-en">sample</span>(<span class="pl-en">range</span>(<span class="pl-c1">1</span>,<span class="pl-c1">30</span>),<span> </span><span class="pl-c1">16</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-2-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC4"><span class="pl-s1">result_overlaps</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">set</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">b</span>]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-2-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC5"><span class="pl-s1">result</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">i</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">i</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-s1">result_overlaps</span><span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">result_overlaps</span>.<span class="pl-en">count</span>(<span class="pl-s1">i</span>)<span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">1</span>]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions-2.py">view raw</a></div>
<div class="gist-meta"><span></span>
<div><i></i></div>
<a href="https://www.practicepython.org/exercise/2014/04/10/10-list-overlap-comprehensions.html"><span><span>練習10</span></span></a>
<p><span><span>本週的練習將重溫舊的練習（請參閱</span></span><a href="https://www.practicepython.org/exercise/2014/03/05/05-list-overlap.html"><span><span>練習5</span></span></a><span><span>），只是需要以其他方式解決。</span></span></p>
<p><span><span>拿兩個列表，舉例來說，這兩個：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">	<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
	<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>並編寫一個程序，該程序返回一個列表，該列表僅包含列表之間的公共元素（無重複項）。</span><span>確保您的程序可以在兩個不同大小的列表上運行。</span></span><em><span><span>至少使用一個列表理解來</span></span></em><span><span>寫這個</span><span>。</span><span>（</span></span><em><span><span>提示：記住</span><span>練習7中的</span></span><a href="https://www.practicepython.org/exercise/2014/03/19/07-list-comprehensions.html"><span><span>列表理解</span></span></a><span></span></em><span><span>）。</span></span></p>
<p><span><span>額外：</span></span></p>
<ul>
<li><span><span>隨機生成兩個列表進行測試</span></span></li>
</ul>
<span><span>樣品溶液</span></span>
<p><span><span>用戶提交的解決方案：</span></span></p>
<div class="gist" id="gist10904252">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-exercise-10">
<div class="Box-body p-0 blob-wrapper data type-text" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-exercise-10-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC1"><span><span>隨機導入</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-exercise-10-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC2"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-exercise-10-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC3"><span><span>一個= random.sample（range（1,30），12）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-exercise-10-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC4"><span><span>b = random.sample（範圍（1,30），16）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-exercise-10-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-exercise-10-LC5"><span><span>結果= [如果b中有i，則a中的i代表i]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/anonymous/10904252/raw/02252b579b7b5d544890dadf356c941ad73e78d4/Exercise%2010"><span><span>查看原始</span></span></a><a href="https://gist.github.com/anonymous/10904252#file-exercise-10"><span><span>練習10</span></span></a><span><span><span> </span>由</span></span><a href="https://github.com/"><span><span>GitHub託管</span></span></a></div>
</div>
</div>
<p><span><span>正如該博客的一些評論者/讀者所指出的（主要感謝Gautam和Jeff），所提出的練習實際上不可能用Python編寫。</span><span>問題是這樣的：上面寫的建議的閱讀器解決方案（以及我自己想到的解決方案）沒有考慮到結果列表中可能存在重複項的事實，我特別要求不要包含重複項。</span><span>這意味著在我上面給出的簡單示例中，</span></span><code class="highlighter-rouge">a</code><span><span>第一個元素</span></span><code class="highlighter-rouge">1</code><span><span>將被添加到</span></span><code class="highlighter-rouge">result</code><span><span>列表中，因為它在中</span></span><code class="highlighter-rouge">b</code><span><span>。</span><span>但隨後它的下一個元素也是</span></span><code class="highlighter-rouge">1</code><span><span>，並且也在</span></span><code class="highlighter-rouge">b</code><span><span>，因此將被添加到</span></span><code class="highlighter-rouge">result</code><span><span>列表中。</span><span>因此，給定的解決方案（comprehension<span> </span></span></span><code class="highlighter-rouge">[i for i in a if i in b]</code><span><span>）將無法在示例解決方案上產生正確的結果。</span></span></p>
<p><span><span>相反，正如Gautam和Jeff所指出的那樣，實現此解決方案的最簡單方法是確保僅查看來自</span></span><code class="highlighter-rouge">a</code><span><span>理解中第一個列表的</span><span>唯一元素</span><span>。</span><span>我們沒有在此博客上使用</span></span><code class="highlighter-rouge">set</code><span><span>內置函數</span><span>討論在Python中輕鬆實現此操作的</span><span>方法，但是如果您知道，解決方案將如下所示：</span></span></p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC1"><span class="pl-k"><span></span></span><span><span class="pl-s1"><span>隨機</span></span><span class="pl-k"><span>導入</span></span></span><span class="pl-s1"><span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機的</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>12</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC3"><span class="pl-s1"><span><span>b<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>16</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-py-LC4"><span class="pl-s1"><span><span>導致</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>集</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>一</span></span></span><span><span>）</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>b</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions.py"><span><span>查看原始</span></span></a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-py"><span><span>list-overlap-comprehensions.py</span></span></a><span><span><span> </span>託管與❤通過</span></span><a href="https://github.com/"><span><span>GitHub上</span></span></a></div>
</div>
</div>
<p><span><span>但是，要在仍然使用列表理解的情況下達到與原始問題相同的結果（但是，絕對不要使用一行代碼），將確保新列表在構建後沒有重疊，使用</span></span><code class="highlighter-rouge">for</code><span><span>列表上</span><span>的傳統</span><span>循環：</span></span></p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-for-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-for-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC1"><span class="pl-k"><span></span></span><span><span class="pl-s1"><span>隨機</span></span><span class="pl-k"><span>導入</span></span></span><span class="pl-s1"><span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-for-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機的</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>12</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-for-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC3"><span class="pl-s1"><span><span>b<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>16</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-for-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC4"><span class="pl-s1"><span><span>result_overlap<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>集</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>一</span></span></span><span><span>）</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>b</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-for-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC5"><span class="pl-s1"><span><span>結果</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-list-overlap-comprehensions-for-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC6"><span class="pl-k"><span><span>對於</span></span></span><span> </span><span class="pl-s1"><span><span>元件</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>result_overlap</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-list-overlap-comprehensions-for-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC7"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>要素</span></span></span><span> </span><span class="pl-c1"><span><span>不能</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>結果</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-list-overlap-comprehensions-for-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-for-py-LC8"><span class="pl-s1"><span><span>結果</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>出現</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>元素</span></span></span><span><span>）</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/mprat/654b5f9286bcc2469077/raw/797c8e56bf0435c5130fa94ef666f119aef0ef07/list-overlap-comprehensions-for.py"><span><span>查看原始</span></span></a><a href="https://gist.github.com/mprat/654b5f9286bcc2469077#file-list-overlap-comprehensions-for-py"><span><span>list-overlap-comprehensions-for.py</span></span></a><span><span><span> </span>託管與❤通過</span></span><a href="https://github.com/"><span><span>GitHub上</span></span></a></div>
</div>
</div>
<p><span><span>或者，要再次練習列表推導，可以使用兩個列表推導來完成：</span></span></p>
<div class="gist" id="gist16704299">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-list-overlap-comprehensions-2-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-list-overlap-comprehensions-2-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC1"><span class="pl-k"><span></span></span><span><span class="pl-s1"><span>隨機</span></span><span class="pl-k"><span>導入</span></span></span><span class="pl-s1"><span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-list-overlap-comprehensions-2-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機的</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>12</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-list-overlap-comprehensions-2-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC3"><span class="pl-s1"><span><span>b<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-s1"><span><span>隨機</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>樣品</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>，</span></span><span class="pl-c1"><span><span>30</span></span></span><span><span>），</span></span><span class="pl-c1"><span><span>16</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-list-overlap-comprehensions-2-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC4"><span class="pl-s1"><span><span>result_overlaps<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>集</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>一</span></span></span><span><span>）</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>b</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-list-overlap-comprehensions-2-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-list-overlap-comprehensions-2-py-LC5"><span class="pl-s1"><span><span>導致</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[</span></span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-k"><span><span>為</span></span></span><span> </span><span class="pl-s1"><span><span>我</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-s1"><span><span>result_overlaps</span></span></span><span> </span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>result_overlaps</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>數</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>i</span></span></span><span><span>）</span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p></p>
<h2>P11 All solutions</h2>
<p><span>Check Primality Functions Solutions</span></p>
<div><i></i></div>
<p><a href="https://www.practicepython.org/exercise/2014/04/16/11-check-primality-functions.html">Exercise 11</a><span></span></p>
<p>Ask the user for a number and determine whether the number is prime or not. (For those who have forgotten, a prime number is a number that has no divisors.). You can (and should!) use your answer to<span> </span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html">Exercise 4</a><span> </span>to help you.</p>
<p><span>Sample solution</span></p>
<p>There are many ways of solving this problem, so here are a sample solutions:</p>
<p>This one is a different breakdown of functions to solve the problem. The strings between three<span> </span><code class="highlighter-rouge">'''</code><span> </span>marks are comments in the code that describe what each function does.</p>
<div class="gist" id="gist11196563">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-prime_check-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-prime_check-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC1"><span class="pl-k">def</span><span> </span><span class="pl-en">get_number</span>(<span class="pl-s1">prompt</span>):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-prime_check-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC2"><span class="pl-s">'''Returns integer value for input. Prompt is displayed text'''</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-prime_check-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC3"><span class="pl-k">return</span><span> </span><span class="pl-en">int</span>(<span class="pl-en">input</span>(<span class="pl-s1">prompt</span>))</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-prime_check-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC4"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-prime_check-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC5"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-prime_check-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC6"><span class="pl-k">def</span><span> </span><span class="pl-en">is_prime</span>(<span class="pl-s1">number</span>):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-prime_check-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC7"><span class="pl-s">'''Returns True for prime numbers, False otherwise'''</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-prime_check-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC8"><span class="pl-c">#Edge Cases</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="9" id="file-prime_check-py-L9"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC9"><span class="pl-k">if</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">1</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="10" id="file-prime_check-py-L10"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC10"><span class="pl-s1">prime</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-c1">False</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="11" id="file-prime_check-py-L11"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC11"><span class="pl-k">elif</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">2</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="12" id="file-prime_check-py-L12"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC12"><span class="pl-s1">prime</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-c1">True</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="13" id="file-prime_check-py-L13"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC13"><span class="pl-c">#All other primes</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="14" id="file-prime_check-py-L14"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC14"><span class="pl-k">else</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="15" id="file-prime_check-py-L15"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC15"><span class="pl-s1">prime</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-c1">True</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="16" id="file-prime_check-py-L16"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC16"><span class="pl-k">for</span><span> </span><span class="pl-s1">check_number</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">range</span>(<span class="pl-c1">2</span>, (<span class="pl-s1">number</span><span> </span><span class="pl-c1">/</span><span> </span><span class="pl-c1">2</span>)<span class="pl-c1">+</span><span class="pl-c1">1</span>):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="17" id="file-prime_check-py-L17"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC17"><span class="pl-k">if</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">%</span><span> </span><span class="pl-s1">check_number</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">0</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="18" id="file-prime_check-py-L18"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC18"><span class="pl-s1">prime</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-c1">False</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="19" id="file-prime_check-py-L19"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC19"><span class="pl-k">break</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="20" id="file-prime_check-py-L20"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC20"><span class="pl-k">return</span><span> </span><span class="pl-s1">prime</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="21" id="file-prime_check-py-L21"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC21"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="22" id="file-prime_check-py-L22"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC22"><span class="pl-k">def</span><span> </span><span class="pl-en">print_prime</span>(<span class="pl-s1">number</span>):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="23" id="file-prime_check-py-L23"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC23"><span class="pl-s1">prime</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-en">is_prime</span>(<span class="pl-s1">number</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="24" id="file-prime_check-py-L24"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC24"><span class="pl-k">if</span><span> </span><span class="pl-s1">prime</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="25" id="file-prime_check-py-L25"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC25"><span class="pl-s1">descriptor</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s">""</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="26" id="file-prime_check-py-L26"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC26"><span class="pl-k">else</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="27" id="file-prime_check-py-L27"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC27"><span class="pl-s1">descriptor</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s">"not "</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="28" id="file-prime_check-py-L28"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC28"><span class="pl-en">print</span>(<span class="pl-s1">number</span>,<span class="pl-s">" is "</span>,<span> </span><span class="pl-s1">descriptor</span>,<span> </span><span class="pl-s">"prime."</span>,<span> </span><span class="pl-s1">sep</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s">""</span>,<span> </span><span class="pl-s1">end</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-s">"<span class="pl-cce">\n</span><span class="pl-cce">\n</span>"</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="29" id="file-prime_check-py-L29"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC29"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="30" id="file-prime_check-py-L30"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC30"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="31" id="file-prime_check-py-L31"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC31"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="32" id="file-prime_check-py-L32"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC32"><span class="pl-c">#never ending loop</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="33" id="file-prime_check-py-L33"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC33"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="34" id="file-prime_check-py-L34"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC34"><span class="pl-k">while</span><span> </span><span class="pl-c1">1</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">1</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="35" id="file-prime_check-py-L35"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC35"><span class="pl-en">print_prime</span>(<span class="pl-en">get_number</span>(<span class="pl-s">"Enter a number to check. Ctl-C to exit."</span>))</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="36" id="file-prime_check-py-L36"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC36"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="37" id="file-prime_check-py-L37"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC37"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="38" id="file-prime_check-py-L38"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC38"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="39" id="file-prime_check-py-L39"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC39"></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/JamieMacIver/11196563/raw/a16d5762b4089d33e34650a22adcdf3426fffe7e/prime_check.py">view raw</a><a href="https://gist.github.com/JamieMacIver/11196563#file-prime_check-py">prime_check.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>And here is a solution without using functions. It is also a correct solution that accomplishes the given task, just without the use of functions.</p>
<div class="gist" id="gist11074742">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-checkprimality-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-checkprimality-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC1"><span class="pl-k">import</span><span> </span><span class="pl-s1">sys</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-checkprimality-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC2"><span class="pl-s1">number</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-en">input</span>(<span class="pl-s">"Please enter a number"</span><span> </span><span class="pl-c1">+</span><span> </span><span class="pl-s">"<span class="pl-cce">\n</span>"</span><span> </span><span class="pl-c1">+</span><span> </span><span class="pl-s">"&gt;&gt;&gt;"</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-checkprimality-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC3"><span class="pl-s1">number</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-en">int</span>(<span class="pl-s1">number</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-checkprimality-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC4"><span class="pl-s1">prime</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-c1">False</span><span> </span><span class="pl-c">#initiate boolean for true false, default false</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-checkprimality-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC5"><span class="pl-k">if</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">&gt;</span><span> </span><span class="pl-c1">0</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-checkprimality-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC6"><span class="pl-k">for</span><span> </span><span class="pl-s1">x</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">range</span><span> </span>(<span class="pl-c1">2</span>,<span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">-</span><span> </span><span class="pl-c1">1</span>):<span> </span><span class="pl-c">#this range excludes number and 1, both of which number is divisible by</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-checkprimality-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC7"><span class="pl-k">if</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">%</span><span> </span><span class="pl-s1">x</span><span> </span><span class="pl-c1">!=</span><span> </span><span class="pl-c1">0</span>:<span> </span><span class="pl-c">#If number isn't evenly divisible by x, start over with the next one</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-checkprimality-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC8"><span class="pl-k">continue</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="9" id="file-checkprimality-py-L9"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC9"><span class="pl-k">elif</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">%</span><span> </span><span class="pl-s1">x</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">0</span>:<span> </span><span class="pl-c">#If number is evenly divisible by x, it can't be prime</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="10" id="file-checkprimality-py-L10"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC10"><span class="pl-s1">sys</span>.<span class="pl-en">exit</span>(<span class="pl-s">"The number is not prime."</span>)</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="11" id="file-checkprimality-py-L11"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC11"><span class="pl-s1">sys</span>.<span class="pl-en">exit</span>(<span class="pl-s">"The number is prime."</span>)<span> </span><span class="pl-c">#number wasn't evenly divisible by any x, so it's prime</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="12" id="file-checkprimality-py-L12"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC12"><span class="pl-k">elif</span><span> </span><span class="pl-s1">number</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">0</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="13" id="file-checkprimality-py-L13"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC13"><span class="pl-s1">sys</span>.<span class="pl-en">exit</span>(<span class="pl-s">"The number is not prime."</span>)<span> </span><span class="pl-c">#According to the Google, 0 is not prime</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="14" id="file-checkprimality-py-L14"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC14"><span class="pl-k">else</span>:<span class="pl-c">#if number is less than 0, the number is not prime (according to the Google).</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="15" id="file-checkprimality-py-L15"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC15"><span class="pl-s1">sys</span>.<span class="pl-en">exit</span>(<span class="pl-s">"The number is not prime."</span>)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/evamvid/4ada99be543f08280fb0/raw/6d497872cdf8ce6f2b45731f1d6877b23baef995/checkprimality.py">view raw</a><a href="https://gist.github.com/evamvid/4ada99be543f08280fb0#file-checkprimality-py">checkprimality.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>This solution doesn’t use functions, but does use list comprehensions, which are always fun. Thanks to Carlos for this solution. The interesting thing here is the observation that when you want to check if a number is prime, all you need to do is check the numbers from 2 to the square root of the number. This is because the pair of numbers that are both the largest factors of the number are<span> </span><code class="highlighter-rouge">square root of x</code><span> </span>and<span> </span><code class="highlighter-rouge">square root of x</code>. Otherwise, the number you are checking for can be found by finding the corresponding factor and checking it.</p>
<div class="gist" id="gist19197315">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-gistfile1-txt">
<div class="Box-body p-0 blob-wrapper data type-text" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-gistfile1-txt-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC1"># Assumes that "a" contains an integer &gt; 2 whose primality needs to be verified</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-gistfile1-txt-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC2"># The algorithm builds a list of factors including the number 2 and all odd numbers</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-gistfile1-txt-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC3"># up to the square root of "a", and then checks if any of those numbers divides "a"</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-gistfile1-txt-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC4"># without a remainder - if so then "a" is not prime, else it is</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-gistfile1-txt-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC5">if sum([ True if a%factor == 0 else False for factor in ( [2] + list(range(3,int(math.sqrt(a))+1,2) )) ]):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-gistfile1-txt-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC6">print("Number is composite")</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-gistfile1-txt-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC7">else:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-gistfile1-txt-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC8">print("Number is prime")</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/cescapa/c655e8e0c1558660150f/raw/d8d19ce0dd06a17f1db5c3140e641af6af2c35bb/gistfile1.txt">view raw</a><a href="https://gist.github.com/cescapa/c655e8e0c1558660150f#file-gistfile1-txt">gistfile1.txt</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<p>Another solution is a clean, short solution that uses list comprehensions.</p>
<div class="gist" id="gist26292207">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-ex11-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-ex11-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC1"><span class="pl-s1">num</span><span> </span><span class="pl-c1">=</span><span> </span><span class="pl-en">int</span>(<span class="pl-en">raw_input</span>(<span class="pl-s">'Insert a number: '</span>))</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-ex11-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC2"><span class="pl-s1">a</span><span> </span><span class="pl-c1">=</span><span> </span>[<span class="pl-s1">x</span><span> </span><span class="pl-k">for</span><span> </span><span class="pl-s1">x</span><span> </span><span class="pl-c1">in</span><span> </span><span class="pl-en">range</span>(<span class="pl-c1">2</span>,<span> </span><span class="pl-s1">num</span>)<span> </span><span class="pl-k">if</span><span> </span><span class="pl-s1">num</span><span> </span><span class="pl-c1">%</span><span> </span><span class="pl-s1">x</span><span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">0</span>]</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-ex11-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC3"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-ex11-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC4"><span class="pl-k">def</span><span> </span><span class="pl-en">is_prime</span>(<span class="pl-s1">n</span>):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-ex11-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC5"><span class="pl-k">if</span><span> </span><span class="pl-s1">num</span><span> </span><span class="pl-c1">&gt;</span><span> </span><span class="pl-c1">1</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-ex11-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC6"><span class="pl-k">if</span><span> </span><span class="pl-en">len</span>(<span class="pl-s1">a</span>)<span> </span><span class="pl-c1">==</span><span> </span><span class="pl-c1">0</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-ex11-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC7"><span class="pl-k">print</span><span> </span><span class="pl-s">'prime'</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-ex11-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC8"><span class="pl-k">else</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="9" id="file-ex11-py-L9"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC9"><span class="pl-k">print</span><span> </span><span class="pl-s">'NOT prime'</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="10" id="file-ex11-py-L10"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC10"><span class="pl-k">else</span>:</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="11" id="file-ex11-py-L11"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC11"><span class="pl-k">print</span><span> </span><span class="pl-s">'NOT prime'</span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="12" id="file-ex11-py-L12"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC12"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="13" id="file-ex11-py-L13"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC13"><span class="pl-en">is_prime</span>(<span class="pl-s1">num</span>)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/anonymous/34620e5c9feeec8824df/raw/bafb93884dfb2ce89bc0ad47e0f0826bc2e05172/ex11.py">view raw</a><a href="https://gist.github.com/anonymous/34620e5c9feeec8824df#file-ex11-py">ex11.py</a><span> </span>hosted with ❤ by<span> </span><a href="https://github.com/">GitHub</a></div>
</div>
</div>
<div id="share">Share the fun!</div>
<div></div>
<div><span>檢查基本功能解決方案</span>
<h4 id="exercise-11"><a href="https://www.practicepython.org/exercise/2014/04/16/11-check-primality-functions.html"><span><span>練習11</span></span></a></h4>
<h4><span><span>向用戶詢問一個數字，並確定該數字是否為質數。</span><span>（對於那些忘記的人，質數是沒有除數的數。）</span><span>您可以（並且應該！）使用</span></span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html"><span><span>練習4</span></span></a><span><span>的答案</span><span>來幫助您。</span></span></h4>
<span><span>樣品溶液</span></span>
<p><span><span>解決此問題的方法有很多，因此這裡有一個示例解決方案：</span></span></p>
<p><span><span>這是解決問題的功能的不同細分。</span><span>三個</span></span><code class="highlighter-rouge">'''</code><span><span>標記</span><span>之間的字符串</span><span>是代碼中的註釋，用於描述每個函數的功能。</span></span></p>
<div class="gist" id="gist11196563">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-prime_check-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-prime_check-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC1"><span class="pl-k"><span><span>def<span> </span></span></span></span><span class="pl-en"><span><span>get_number</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>提示</span></span></span><span><span>）：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-prime_check-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC2"><span class="pl-s"><span><span>'''返回輸入的整數值。</span><span>提示顯示文字'''</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-prime_check-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC3"><span class="pl-k"><span><span>返回</span></span></span><span> </span><span class="pl-en"><span><span>int</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>輸入</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>提示</span></span></span><span><span>））</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-prime_check-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC4"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-prime_check-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC5"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-prime_check-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC6"><span class="pl-k"><span><span>def<span> </span></span></span></span><span class="pl-en"><span><span>is_prime</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>number</span></span></span><span><span>）：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-prime_check-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC7"><span class="pl-s"><span><span>'''返回質數為True，否則為False'''</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-prime_check-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC8"><span class="pl-c"><span><span>＃邊緣案例</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="9" id="file-prime_check-py-L9"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC9"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>數字</span></span></span><span> </span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="10" id="file-prime_check-py-L10"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC10"><span class="pl-s1"><span><span>素數</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-c1"><span><span>假</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="11" id="file-prime_check-py-L11"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC11"><span class="pl-k"><span><span>elif的</span></span></span><span> </span><span class="pl-s1"><span><span>數目</span></span></span><span> </span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>2</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="12" id="file-prime_check-py-L12"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC12"><span class="pl-s1"><span><span>素數</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-c1"><span><span>真</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="13" id="file-prime_check-py-L13"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC13"><span class="pl-c"><span><span>＃所有其他素數</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="14" id="file-prime_check-py-L14"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC14"><span class="pl-k"><span><span>其他</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="15" id="file-prime_check-py-L15"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC15"><span class="pl-s1"><span><span>素數</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-c1"><span><span>真</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="16" id="file-prime_check-py-L16"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC16"><span class="pl-k"><span><span>用於</span></span></span><span> </span><span class="pl-s1"><span><span>check_number</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>2</span></span></span><span><span>，（</span></span><span class="pl-s1"><span><span>數</span></span></span><span> </span><span class="pl-c1"><span><span>/<span> </span></span></span></span><span class="pl-c1"><span><span>2</span></span></span><span><span>）</span></span><span class="pl-c1"><span><span>+<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>）：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="17" id="file-prime_check-py-L17"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC17"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>數字</span></span></span><span> </span><span class="pl-c1"><span><span>％</span></span></span><span> </span><span class="pl-s1"><span><span>check_number<span> </span></span></span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="18" id="file-prime_check-py-L18"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC18"><span class="pl-s1"><span><span>素數</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-c1"><span><span>假</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="19" id="file-prime_check-py-L19"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC19"><span class="pl-k"><span><span>打破</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="20" id="file-prime_check-py-L20"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC20"><span class="pl-k"><span><span>返回</span></span></span><span> </span><span class="pl-s1"><span><span>素數</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="21" id="file-prime_check-py-L21"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC21"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="22" id="file-prime_check-py-L22"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC22"><span class="pl-k"><span><span>def<span> </span></span></span></span><span class="pl-en"><span><span>print_prime</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>number</span></span></span><span><span>）：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="23" id="file-prime_check-py-L23"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC23"><span class="pl-s1"><span><span>素數</span></span></span><span> </span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-en"><span><span>is_prime</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>數字</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="24" id="file-prime_check-py-L24"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC24"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>素數</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="25" id="file-prime_check-py-L25"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC25"><span class="pl-s1"><span><span>描述符</span></span></span><span> </span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-s"><span><span>“”</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="26" id="file-prime_check-py-L26"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC26"><span class="pl-k"><span><span>其他</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="27" id="file-prime_check-py-L27"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC27"><span class="pl-s1"><span><span>描述符</span></span></span><span> </span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-s"><span><span>“不是”</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="28" id="file-prime_check-py-L28"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC28"><span class="pl-en"><span><span>print</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>number</span></span></span><span><span>，</span></span><span class="pl-s"><span><span>“ is”</span></span></span><span><span>，</span></span><span class="pl-s1"><span><span>描述符</span></span></span><span><span>，</span></span><span class="pl-s"><span><span>“ prime。”</span></span></span><span><span>，</span></span><span class="pl-s1"><span><span>sep<span> </span></span></span></span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-s"><span><span>“”</span></span></span><span><span>，</span></span><span class="pl-s1"><span><span>end<span> </span></span></span></span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-s"><span><span>“<span> </span></span></span><span class="pl-cce"><span><span>\ n<span> </span></span></span></span><span class="pl-cce"><span><span>\ n</span></span></span><span><span><span> </span>”</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="29" id="file-prime_check-py-L29"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC29"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="30" id="file-prime_check-py-L30"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC30"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="31" id="file-prime_check-py-L31"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC31"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="32" id="file-prime_check-py-L32"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC32"><span class="pl-c"><span><span>＃永不結束循環</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="33" id="file-prime_check-py-L33"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC33"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="34" id="file-prime_check-py-L34"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC34"><span class="pl-k"><span><span>而</span></span></span><span> </span><span class="pl-c1"><span><span>1<span> </span></span></span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>1時</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="35" id="file-prime_check-py-L35"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC35"><span class="pl-en"><span><span>print_prime</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>get_number</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>“輸入要檢查的數字</span></span></span><span><span class="pl-en"><span>。Ctl<span> </span></span></span><span class="pl-s"><span>-C退出。”</span></span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="36" id="file-prime_check-py-L36"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC36"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="37" id="file-prime_check-py-L37"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC37"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="38" id="file-prime_check-py-L38"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC38"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="39" id="file-prime_check-py-L39"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-prime_check-py-LC39"></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/JamieMacIver/11196563/raw/a16d5762b4089d33e34650a22adcdf3426fffe7e/prime_check.py"><span><span>查看原始</span></span></a><a href="https://gist.github.com/JamieMacIver/11196563#file-prime_check-py"><span><span>prime_check.py</span></span></a><span><span><span> </span>託管與❤通過</span></span><a href="https://github.com/"><span><span>GitHub上</span></span></a></div>
</div>
</div>
<p><span><span>這是不使用函數的解決方案。</span><span>這也是不使用功能即可完成給定任務的正確解決方案。</span></span></p>
<div class="gist" id="gist11074742">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-checkprimality-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-checkprimality-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC1"><span class="pl-k"><span><span>導入</span></span></span><span> </span><span class="pl-s1"><span><span>系統</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-checkprimality-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC2"><span class="pl-s1"><span><span>數字</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-en"><span><span>輸入</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>“請輸入數字”<span> </span></span></span></span><span class="pl-c1"><span><span>+<span> </span></span></span></span><span class="pl-s"><span><span>“<span> </span></span></span><span class="pl-cce"><span><span>\ n</span></span></span><span><span><span> </span>”<span> </span></span></span></span><span class="pl-c1"><span><span>+<span> </span></span></span></span><span class="pl-s"><span><span>“ &gt;&gt;&gt;”</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-checkprimality-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC3"><span class="pl-s1"><span><span>數字</span></span></span><span> </span><span class="pl-c1"><span><span>=</span></span></span><span> </span><span class="pl-en"><span><span>整數</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>數字</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-checkprimality-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC4"><span class="pl-s1"><span><span>prime<span> </span></span></span></span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-c1"><span><span>False<span> </span></span></span></span><span class="pl-c"><span><span>＃初始化布爾值為true false，默認為false</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-checkprimality-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC5"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>數字</span></span></span><span> </span><span class="pl-c1"><span><span>&gt;<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-checkprimality-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC6"><span class="pl-k"><span><span>對於</span></span></span><span> </span><span class="pl-s1"><span><span>X</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>2</span></span></span><span><span>，</span></span><span class="pl-s1"><span><span>數</span></span></span><span> </span><span class="pl-c1"><span><span>-<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>）：<span> </span></span></span><span class="pl-c"><span><span>＃</span><span>此範圍排除數和1，這兩個數是整除</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-checkprimality-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC7"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>數字</span></span></span><span> </span><span class="pl-c1"><span><span>％</span></span></span><span> </span><span class="pl-s1"><span><span>x<span> </span></span></span></span><span class="pl-c1"><span><span>！=<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span>：＃</span></span><span class="pl-c"><span><span>如果數字不能被x整除，則從下一個開始</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-checkprimality-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC8"><span class="pl-k"><span><span>繼續</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="9" id="file-checkprimality-py-L9"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC9"><span class="pl-k"><span><span>elif<span> </span></span></span></span><span class="pl-s1"><span><span>number<span> </span></span></span></span><span class="pl-c1"><span><span>％</span></span></span><span> </span><span class="pl-s1"><span><span>x<span> </span></span></span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span>：＃</span></span><span class="pl-c"><span><span>如果數字可以被x整除，則不能為素數</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="10" id="file-checkprimality-py-L10"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC10"><span class="pl-s1"><span><span>sys</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>退出</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>“數字不是素數。”</span></span></span><span><span>）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="11" id="file-checkprimality-py-L11"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC11"><span class="pl-s1"><span><span>sys</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>exit</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>“數字是質數。”</span></span></span><span><span>）</span><span class="pl-c"><span>#<span> </span></span></span><span class="pl-s"><span>number</span></span></span><span class="pl-c"><span><span>不能被任何x整除，所以它是質數</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="12" id="file-checkprimality-py-L12"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC12"><span class="pl-k"><span><span>elif的</span></span></span><span> </span><span class="pl-s1"><span><span>數目</span></span></span><span> </span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="13" id="file-checkprimality-py-L13"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC13"><span class="pl-s1"><span><span>sys</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>exit</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>“數字不是素數。”</span></span></span><span><span>）</span></span><span class="pl-c"><span><span>#Google表示，0不是素數</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="14" id="file-checkprimality-py-L14"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC14"><span class="pl-k"><span><span>else</span></span></span><span><span>：</span></span><span class="pl-c"><span><span>＃如果數字小於0，則該數字不是素數（根據Google）。</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="15" id="file-checkprimality-py-L15"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-checkprimality-py-LC15"><span class="pl-s1"><span><span>sys</span></span></span><span><span>。</span></span><span class="pl-en"><span><span>退出</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>“數字不是素數。”</span></span></span><span><span>）</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/evamvid/4ada99be543f08280fb0/raw/6d497872cdf8ce6f2b45731f1d6877b23baef995/checkprimality.py"><span><span>查看原始</span></span></a><a href="https://gist.github.com/evamvid/4ada99be543f08280fb0#file-checkprimality-py"><span><span>checkprimality.py</span></span></a><span><span><span> </span>託管與❤通過</span></span><a href="https://github.com/"><span><span>GitHub上</span></span></a></div>
</div>
</div>
<p><span><span>該解決方案不使用函數，但是使用列表推導，這總是很有趣。</span><span>感謝卡洛斯的解決方案。</span><span>有趣的是，觀察到當您要檢查數字是否為質數時，只需檢查2到該數字的平方根之間的數字即可。</span><span>這是因為這兩個都是最大數字的數字對</span></span><code class="highlighter-rouge">square root of x</code><span><span>和</span></span><code class="highlighter-rouge">square root of x</code><span><span>。</span><span>否則，可以通過查找相應的因子並進行檢查來找到要檢查的編號。</span></span></p>
<div class="gist" id="gist19197315">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-gistfile1-txt">
<div class="Box-body p-0 blob-wrapper data type-text" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-gistfile1-txt-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC1"><span><span>＃假設“ a”包含一個大於2的整數，需要驗證其素數</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-gistfile1-txt-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC2"><span><span>＃算法會建立一個因子列表，包括數字2和所有奇數</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-gistfile1-txt-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC3"><span><span>＃直到“ a”的平方根，然後檢查這些數字中的任何一個是否除以“ a”</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-gistfile1-txt-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC4"><span><span>＃沒有餘數-如果是，則“ a”不是質數，否則為</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-gistfile1-txt-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC5"><span><span>如果sum（[如果a％factor == 0，則為True，否則（[2] + list（range（3，int（math.sqrt（a））+ 1,2）））中的因子為False]））：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-gistfile1-txt-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC6"><span><span>print（“數字是合成的”）</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-gistfile1-txt-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC7"><span><span>其他：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-gistfile1-txt-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-txt-LC8"><span><span>打印（“數字是素數”）</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/cescapa/c655e8e0c1558660150f/raw/d8d19ce0dd06a17f1db5c3140e641af6af2c35bb/gistfile1.txt"><span><span>查看原始</span></span></a><a href="https://gist.github.com/cescapa/c655e8e0c1558660150f#file-gistfile1-txt"><span><span>gistfile1.txt</span></span></a><span><span><span> </span>與❤主辦</span></span><a href="https://github.com/"><span><span>的GitHub</span></span></a></div>
</div>
</div>
<p><span><span>另一種解決方案是使用列表推導的簡潔的簡短解決方案。</span></span></p>
<div class="gist" id="gist26292207">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-ex11-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-ex11-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC1"><span class="pl-s1"><span><span>num<span> </span></span></span></span><span class="pl-c1"><span><span>=<span> </span></span></span></span><span class="pl-en"><span><span>int</span></span></span><span><span>（</span></span><span class="pl-en"><span><span>raw_input</span></span></span><span><span>（</span></span><span class="pl-s"><span><span>'插入數字：'</span></span></span><span><span>））</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-ex11-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC2"><span class="pl-s1"><span><span>a<span> </span></span></span></span><span class="pl-c1"><span><span>=</span></span></span><span><span><span> </span>[<span> </span></span></span><span class="pl-s1"><span><span>x</span></span></span><span> </span><span class="pl-k"><span><span>表示</span></span></span><span> </span><span class="pl-s1"><span><span>x</span></span></span><span> </span><span class="pl-c1"><span><span>在</span></span></span><span> </span><span class="pl-en"><span><span>範圍</span></span></span><span><span>（</span></span><span class="pl-c1"><span><span>2</span></span></span><span><span>，</span></span><span class="pl-s1"><span><span>num</span></span></span><span><span>）中，</span></span><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>num<span> </span></span></span></span><span class="pl-c1"><span><span>％</span></span></span><span> </span><span class="pl-s1"><span><span>x<span> </span></span></span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span><span> </span>]</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="3" id="file-ex11-py-L3"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC3"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="4" id="file-ex11-py-L4"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC4"><span class="pl-k"><span><span>def<span> </span></span></span></span><span class="pl-en"><span><span>is_prime</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>n</span></span></span><span><span>）：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="5" id="file-ex11-py-L5"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC5"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-s1"><span><span>num<span> </span></span></span></span><span class="pl-c1"><span><span>&gt;<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="6" id="file-ex11-py-L6"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC6"><span class="pl-k"><span><span>如果</span></span></span><span> </span><span class="pl-en"><span><span>len</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>a</span></span></span><span><span>）</span></span><span class="pl-c1"><span><span>==<span> </span></span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="7" id="file-ex11-py-L7"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC7"><span class="pl-k"><span><span>打印</span></span></span><span> </span><span class="pl-s"><span><span>'prime'</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="8" id="file-ex11-py-L8"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC8"><span class="pl-k"><span><span>其他</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="9" id="file-ex11-py-L9"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC9"><span class="pl-k"><span><span>打印</span></span></span><span> </span><span class="pl-s"><span><span>“不素”</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="10" id="file-ex11-py-L10"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC10"><span class="pl-k"><span><span>其他</span></span></span><span><span>：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="11" id="file-ex11-py-L11"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC11"><span class="pl-k"><span><span>打印</span></span></span><span> </span><span class="pl-s"><span><span>“不素”</span></span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="12" id="file-ex11-py-L12"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC12"></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="13" id="file-ex11-py-L13"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-ex11-py-LC13"><span class="pl-en"><span><span>is_prime</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>num</span></span></span><span><span>）</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p></p>
<h2>P12 All solutions</h2>
<p><span>List Ends Solutions</span></p>
<div><i></i></div>
<p><a href="https://www.practicepython.org/exercise/2014/04/25/12-list-ends.html">Exercise 12</a><span></span></p>
<p>Write a program that takes a list of numbers (for example,<span> </span><code class="highlighter-rouge">a = [5, 10, 15, 20, 25]</code>) and makes a new list of only the first and last elements of the given list. For practice, write this code inside a function.</p>
<p><span>Sample solution</span></p>
<div class="gist" id="gist11708295">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-gistfile1-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-gistfile1-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-py-LC1"><span class="pl-k">def</span><span> </span><span class="pl-en">list_ends</span>(<span class="pl-s1">a_list</span>):</td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-gistfile1-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-py-LC2"><span class="pl-k">return</span><span> </span>[<span class="pl-s1">a_list</span>[<span class="pl-c1">0</span>],<span> </span><span class="pl-s1">a_list</span>[<span class="pl-en">len</span>(<span class="pl-s1">a_list</span>)<span class="pl-c1">-</span><span class="pl-c1">1</span>]]</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="gist-meta"><a href="https://gist.github.com/anonymous/c3b1ff3420bc3bd68c4d/raw/d1322b914f164409dbeb2442d810dc073a63573a/gistfile1.py">view raw</a></div>
</div>
</div>
<div class="gist-meta"><a href="https://www.practicepython.org/exercise/2014/04/25/12-list-ends.html"><span>練習12</span></a>
<p><span><span>編寫一個程序，該程序接受一個數字列表（例如</span></span><code class="highlighter-rouge">a = [5, 10, 15, 20, 25]</code><span><span>），並製作一個僅包含給定列表的第一個和最後一個元素的新列表。</span><span>為了練習，請在函數內編寫此代碼。</span></span></p>
<span><span>樣品溶液</span></span>
<div class="gist" id="gist11708295">
<div class="gist-file">
<div class="gist-data">
<div class="js-gist-file-update-container js-task-list-container file-box">
<div class="file my-2" id="file-gistfile1-py">
<div class="Box-body p-0 blob-wrapper data type-python" itemprop="text">
<table class="highlight tab-size js-file-line-container" data-paste-markdown-skip="" data-tab-size="8">
<tbody>
<tr>
<td class="blob-num js-line-number" data-line-number="1" id="file-gistfile1-py-L1"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-py-LC1"><span class="pl-k"><span><span>def<span> </span></span></span></span><span class="pl-en"><span><span>list_ends</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>a_list</span></span></span><span><span>）：</span></span></td>
</tr>
<tr>
<td class="blob-num js-line-number" data-line-number="2" id="file-gistfile1-py-L2"></td>
<td class="blob-code blob-code-inner js-file-line" id="file-gistfile1-py-LC2"><span class="pl-k"><span><span>返回</span></span></span><span><span>[</span></span><span class="pl-s1"><span><span>的a_list</span></span></span><span><span><span> </span>[<span> </span></span></span><span class="pl-c1"><span><span>0</span></span></span><span><span><span> </span>]，</span></span><span class="pl-s1"><span><span>的a_list</span></span></span><span><span><span> </span>[<span> </span></span></span><span class="pl-en"><span><span>LEN</span></span></span><span><span>（</span></span><span class="pl-s1"><span><span>的a_list</span></span></span><span><span>）</span></span><span class="pl-c1"><span><span>-<span> </span></span></span></span><span class="pl-c1"><span><span>1</span></span></span><span><span><span> </span>]]</span></span></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<h1>教學歷程</h1>
<h2>W1</h2>
1.照號碼編排座位</div>
<div class="activitywrap compositeNest flash">2.網路的一些性質及介紹等(proxy,ipv6,ipv4等)2<br/>1.建立 Github, Gitlab, Heroku 與 Authorea 帳號</div>
<div class="activitywrap compositeNest flash"></div>
<h2>W2</h2>
<div class="activitywrap compositeNest flash"><br/>1.建立 Github, Gitlab, Heroku 與 Authorea 帳號<br/>2.學員利用 Github Pages 與 CMSiMDE 建立個人網頁</div>
<div class="activitywrap compositeNest flash">
<div class="activitywrap compositeNest flash">3.登陸學號@gm填寫基本資料</div>
<div class="activitywrap compositeNest flash"></div>
</div>
<div class="activitywrap compositeNest flash">下載可攜 Python 套件<br/>在電腦輔助設計室可以利用 IPv6 協定至 http://a.kmol.info:88 下載課程相關檔案.<br/><br/>下載 fall2020_cp.7z 壓縮檔案之後, 直接利用 7zip 解開壓縮, 然後在 64 位元 Windows 10 啟動 start.bat, 就可以直接在 SciTE 編輯器中解譯 Python 程式, 而且可以利用 pip 工具安裝所需的 Python 模組之後, 接下來必須:<br/><br/>了解如何自己建立與 fall2020_cp.7z 相同功能的可攜 Python 套件<br/>了解如何在可攜套件中加入 portablegit, sharex, putty 等工具, 並學習如何使用<br/>了解如何在 github 以 submodule (或不以 submodule) 建立 cmsimde 倉儲<br/>了解如何在近端維護 CMSiMDE 內容管理系統</div>
<br/><br/><br/><br/><br/>
<h2>W3</h2>
<p></p>
<br/>
<div class="activitywrap compositeNest flash"></div>
<h2>英文搶救計畫</h2>
<div class="activitywrap compositeNest flash">
<p>曾經錯過沒有關係, 但若因為終身菜英文而錯失美好未來, 著實可惜. 解救菜英文就從現在開始.</p>
<p>先從<a href="https://www.talkenglish.com/vocabulary/top-2000-vocabulary.aspx">最常用的 2000 個英文字彙</a>開始.</p>
<p>國中英語字彙<span> </span><a href="http://mde.tw/cp2020/downloads/2000_words.txt">2000 字</a></p>
<p>普通高中 4500 -7000 字</p>
<p>技職與綜合高中 4000 -<span> </span><a href="http://mde.tw/cp2020/downloads/5000_words.txt">5500 字</a></p>
<h4>自行寫程式兼學英文字彙:</h4>
<p>假如能夠配合 <a href="https://github.com/mdecourse/lookupdict">https://github.com/mdecourse/lookupdict</a><span> </span>從 Webster 英英字典中整理出<span> </span><a href="http://mde.tw/cp2020/downloads/5000_words.txt">5500 字</a><span> </span>的英文說明, 並逐字研讀, 應該是解救菜英文最佳手段.</p>
<h4>使用電腦學習英文字彙:</h4>
<p>另一項學習英文字彙的方式則是利用電腦或筆電下載安裝<span> </span><a href="https://github.com/ankitects/anki">Anki</a>, 然後導入<span> </span><a href="https://ankiweb.net/shared/info/1104981491">4000 英文單字</a>學習模組, 就可以開始學習了. Anki 還有其他<a href="https://ankiweb.net/shared/decks/english">學習英文的 Decks</a>.<span></span></p>
<h4>使用手機學習英文字彙:</h4>
<p>在手機上安裝<a href="https://apps.apple.com/tw/app/%E6%9F%A5%E6%9F%A5%E5%96%AE%E5%AD%97/id1482901273">查查單字</a><span> </span>Apps (Android<span> </span><a href="https://play.google.com/store/apps/details?id=tiny.biscuit.assistant2">查查英文</a>).</p>
<p>在手機上安裝<span> </span><a href="https://itenyh.github.io/AnkiDict/">Anki英辞</a><span> </span>Apps, 這是以<span> </span><a href="https://github.com/skywind3000/ECDICT">https://github.com/skywind3000/ECDICT</a><span> </span>英漢字典內容為基礎的 Anki 學習套件, 使用者可以將所查詢的英文單字解釋內容設為 Anki 字詞, 進一步作為暗記英文字彙的有效工具.</p>
<p>常用的 2000 + 800 個英文字彙</p>
<p>A-<br/>a/an, a few, a little, a lot, a.m., able, about, above, abroad, across, act, action, actor, actress, actually, afraid, after, afternoon, again, age, ago, agree, ahead, air, airplane(plane), airport, all, allow, almost, along, already, also, always, America, American,and, angle, angry, animal, another, answer, ant, any, anyone(anybody), anything, apartment, appear, apple, April, area, arm, around, arrive, art, as, ask, at, attack, August, aunt, autumn(fall), away<br/><br/>B-<br/>baby, back, bad, badminton, bag, bake, bakery, balcony, banana, band, bank, baseball, basket, basketball, bat, bath, bathroom, be(am, is, are, was, were, been), beach, bean, bear, beautiful, because, become, bed, bedroom, bee, beef, before, begin, behind, believe, bell, belong, below, belt, bench, beside, between, bicycle(bike), big, bird, birthday, bite, black, blackboard, blank, blanket, blind, block, blow, blue, boat, body, boil, book, bookstore, bored, boring, born, borrow, boss, both, bottle, bottom, bow, bowl, box, boy, brave, bread, break, breakfast, bridge, bright, bring, brother, brown, brush, bug, build, bun, burn, bus, business, businessman, busy, but, butter, butterfly,button, buy, by<br/><br/>C-<br/>cake, call, camera, camp, can, could, candle, candy, cap, car, card, care, careful, carry, case, castle, cat, catch, celebrate, cellphone, cent, center, centimeter, chair, chalk, chance, change, cheap, cheat, check, cheer, cheese, chicken,  child, China,  Chinese, chocolate, choice, choose,  chopsticks, Christmas, church, circle, city, clap, class, classmate, classroom,clean, clear, clerk, climb, clock, close, clothes, cloud, cloudy, club, coat, coffee, cold,  collect,  color,  comb,  come,  comfortable,  comic,  common,  computer, convenient, cook, cookie, cool, copy, corner, correct, cost, couch, count, country, course, cousin, cover, cow, crazy, cross, cry, cup, cut, cute<br/>    <br/>D-<br/>dance,dangerous,dark,date,daughter,day,dead,deal,dear,death,December,decide,deep,define,delicious,dentist,department store,desk,dictionary,die,different,difficult,dig,dining room,dinner,dirty,dish,do (does, did, done),doctor(Dr.),dog,doll,dollar,door,dot,down,download,dozen,draw,drawer,dream,dress,drink,drive,driver,drop,drum,dry,duck,during<br/>    <br/>E-<br/>each,ear,early,earth,earthquake,east,Easter, easy,eat,egg,eight,eighteen,eighty,either,elementary school,elephant,eleven,else,e-mail,end,engineer,English, enjoy,enough,enter,envelope,eraser,error,eve,even,evening,ever,every,everyone(everybody),everything,example,excellent,except,excited,exciting,excuse,exercise,expect,expensive,experience,explain,eye<br/>    <br/>F-<br/>face,fact,factory,fail,fall,family,famous,fan,far,farm,farmer,fast,fat,father(dad, daddy),favorite,February,feed,feel,festival,fever,few,<br/>55fifteen,fifty,fight,file,fill,finally,find,fine,finger,finish,fire,first,fish,fisherman,five,fix,floor,flower,fly,follow,food,fool,foot,for,foreign,foreigner,forget,fork,forty,four,fourteen,fox,free,fresh,Friday,friend,friendly,fries(French fries),frog,from,front,fruit,fry,full,fun,funny,future<br/>    <br/>G-<br/>game, garden, garbage, gas, gate, get, ghost, giant, gift, girl, give, glad, glass, glasses, glove, glue, go, goat, god, good, good-bye(goodbye, bye), goose, grade, gram, grandfather(grandpa), grandmother(grandma), grape, grass, gray, great, green, ground, group, grow, guava, guess, guitar, guy, gym<br/><br/>H-<br/>habit, hair, half, Halloween, ham, hamburger (burger), hand, handsome, hang, happen, happy, hard, hard-working, hat, hate, have (has, had), he (him, his, himself), head, headache, health, healthy, hear, heart, heat, heavy, height, hello, help, helpful, hen, here, hey, hi, hide, high, hike, hill, history, hit, hobby, hold, holiday, home, homework, honest, honey, hope, horse, hospital, hot, hot dog, hotel, hour, house, housewife, how, however, hundred, hungry, hunt, hurry, hurt, husband<br/><br/>I-<br/>I(me, my, mine, myself), ice, ice cream, idea, if, important, in, inch, insect, inside, interest, interested, interesting, Internet (Net), interview, into, invite, island, it(its, itself), item<br/>    <br/>J-<br/>jacket, January, jeans, job, jog, join, joke, joy, juice, July, jump, June, junior high school, just<br/><br/>K-<br/>keep, key, kick, kid, kill, kilogram, kind, king, kiss, kitchen, kite, knee, knife, knock, know, knowledge<br/><br/>L-<br/>lake, lamp, land, language, large, last, late, later, laugh, lawyer, lazy, lead, leader, learn, least, leave, left, leg, lemon, lend, less, lesson, let, letter, level, library, lie, life, light, like, line, lion, lip, list, listen, little,live, living room, lonely, long, look, lose, loud, love, lovely, low, lucky, lunch<br/><br/>M-<br/>machine, mad, magic, mail, mailman(mail carrier), main, make, man, many, map, March, mark, marker, market, married, mask, math(mathematics), matter, may (might), May,maybe, meal, mean, meat, medicine, medium, meet, meeting, member, menu, metro, middle, mile, milk, million, mind, minute, Miss, miss, mistake, modern, moment, Monday, money, monkey, month, moon, more, morning, mop, most, mother (mom, mommy), motorcycle, mountain, mouse, mouth, move, movie, Mr., Mrs., Ms., much, mud, museum, music, must<br/><br/>N-<br/>nail, name, national, nature, near, neck, need, neighbor, never, new, news, newspaper, next, nice, night, nine, nineteen, ninety, no, nobody, noise, noisy, noodle, noon,north, nose, not, note, notebook, nothing, notice, November, now, number, nurse<br/><br/>O-<br/>o'clock, October, of, off, office, officer, often, oil, OK, old, on, once, one, only, open, or,  orange, order, other, out, outside, over, own<br/><br/>P-<br/>p.m., pack, package, page, paint, pair, pants, papaya, paper, parent, park, part,<br/>56party, pass, past, paste, pay, PE(physical education), peach, pear, pen, pencil, people, perhaps, person, pet, photo, piano, pick, picnic, picture, pie, piece, pig, pin, pink, pipe, pizza, place, plan, planet, plant, plate, play, player, playground, please, pleasure, pocket, point, police, polite, pond, pool, poor, pop, popcorn, popular, pork, possible, post office, postcard, pot, pound, power, probably, practice, pray, prepare, present, pretty, price, prize, problem, program, proud, public, pull, pumpkin, puppy, purple, push, put<br/>    <br/>Q-<br/>quarter, queen, question, quick, quiet, quite, quiz<br/><br/>R-<br/>rabbit, race, radio, rain, rainbow, rainy, raise, rat, reach, read, ready, real, really, reason, red, refrigerator (fridge), relative, remember, repeat, report, reporter, rest, restaurant, restroom, rice, rich, ride, right, ring, rise, river, road, robot, R.O.C./ROC,rock, roll, room, root, rope, rose, round, row, rule, ruler, run<br/><br/>S-<br/>sad, safe, sail, salad, sale, salesman, salt, same, sandwich, Saturday, save, say, scared, school, science, scooter, screen, sea, season, seat, second, secretary, see, seed, seesaw, seldom, sell, send, senior high school, sentence, September, serious, service, set, seven, seventeen, seventy, several, shake, shape, share, sharp, she (her, hers, herself), sheep, shine, ship, shirt, shoe(s), shop, shopkeeper, short, shorts, should, shoulder, shout, show, shower, shy, sick, side, sidewalk, sight, sign, simple, since, sing, singer, sir, sister, sit, six, sixteen, sixty, size, skirt, sky, sleep, slide, slim, slow, small, smart, smell, smile, smoke, snack, snake, snow, snowy, so, soccer, socks, sofa, soldier, some, someone(somebody), something, sometimes, somewhere, son, song, soon, sore, sorry, sound, soup, south, space, speak, special, spell, spend, spider, spoon, sports, spring, square, stairs, stamp, stand, star, start, station, stay, steak, still, stomach, stop, store, story, straight, strange, stranger, strawberry, street, string, strong,student, study, stupid, subject, successful, sugar, summer, sun, Sunday, sunny, supermarket, sure, surf, surprise, surprised, sweater, sweet, swim, swing<br/><br/>T-<br/>table, tail, Taiwan, take, talk, tall, tape, taste, taxi, tea, teach, teacher, team, teenager, telephone(phone), television(TV), tell, temple, ten, tennis, terrible, test, than, thank, that, the, theater, then, there, these, they(them, their, theirs, themselves), thick, thin, thing, think, third, thirsty, thirteen, thirty, this, those, though(although), thousand, three, throat, through, throw, Thursday, ticket, tidy, tie, tiger, time, tip, tired, to, toast, today, toe, together, tomato, tomorrow, tonight, too, tool, tooth, top, topic, total, touch, towel, town, toy, traffic, train, trash, treat, tree, trick, trip, trouble, truck, true, try, T-shirt, Tuesday, turn, turtle, twelve, twenty, twice, two, type, typhoon<br/><br/>U-<br/>ugly, umbrella, uncle, under, understand, unhappy, uniform, until, up, upload, U.S.A./USA, use, useful, usually<br/><br/>V-<br/>vacation, vegetable, very, video, violin, visit, visitor, voice<br/><br/>W-<br/>wait, waiter, waitress, wake, walk, wall, wallet, want, warm, wash, watch, water, watermelon, wave, way, we (us, our, ours, ourselves), weak, wear, weather, Wednesday, week, weekend, welcome, well, west, wet, what, when, where, whether, which, while, white, who, whose, why, wide, wife, will(would), win, wind, window, windy, winter, wise, wish, with, without, woman, wonderful, word, work, workbook, worker, world, worry, write, writer, wrong<br/>    <br/>X-<br/><br/>Y-<br/>yard, year, yellow, yes(yeah), yesterday, yet, you(your, yours, yourself, yourselves), young, yummy<br/><br/>Z-<br/>zebra, zero, zoo<br/><br/>其他常用800字（依字母排列）<br/><br/>A-<br/>absent,  accept,  accident,  active,  activity,  add,  address,  admire,  adult, advertisement, advice, advise, affect, against, aim, air conditioner, airlines, alarm, album, alike, alive, alone, aloud, alphabet, altogether, ambulance, among, amount, ancient,angel,anger, ankle, anywhere, apologize, appreciate, argue, armchair, army, arrange, artist, asleep, assistant, assume, attention, available, avoid<br/><br/>B-<br/>baby sitter, backpack, backward, ball, balloon,barbecue,barber, bark, base, basement, basic, bathe, beard, beat, beauty, beer, beginner, beginning, behave, besides, beyond, bill, biology, bitter, blame, bless, blood, blouse, board, bomb, bone, bookcase, bother, bowling, branch, brick, broad, broadcast, brunch, bucket, buffet, building, bundle, burger, burst<br/><br/>C-<br/>cabbage,  cable,  cafeteria, cage,  calendar,  calm,  campus,  cancel,  cancer, captain, careless, carpet, carrot, cartoon, cash, cause, ceiling, central, century, cereal, certain, channel, character, charge, chart, chase, chemistry, chess,  childhood,  childish,  childlike,  chin,  chubby,  classical,  clever, climate,  closet,  coach,  coast,  cockroach,  coin, cola,  college,  colorful, command, comment,company, compare, complain, complete, concern,confident,confuse,  congratulation,  consider,  considerate,  contact  lens,  continue, contract,  control,  convenience  store,  conversation,  corn,  cotton,  cough, couple, courage, court, cowboy,crab, crayon, cream, create, credit card, crime, crowd, crowded, cruel, culture, cure, curious, current, curtain, curve, custom, customer<br/><br/>D-<br/>daily, damage, danger, dawn, deaf, debate, decision, decorate, decrease, deer, degree, deliver, department, depend, describe, desert, design, desire, dessert, detect, develop, dial, diamond, diary, diet, difference, difficulty, diligent, diplomat,  dinosaur,  direct,  direction,  disappear,  discover,  discuss, discussion, dishonest, distance, distant, divide, dizzy, dodgeball, dolphin, donkey, double, doubt, doughnut, downstairs, downtown, dragon, drama, dresser, drugstore, dryer, dumb, dumpling, duty<br/><br/>E-<br/>eagle, earn, earrings, ease, edge, education, effort, elder, elect, electric, embarrass, emotion, emphasize, employ, empty, enemy, energetic, energy, engine,<br/>58entrance, environment, envy, equal, especially, event, everywhere, evil, exam, excite, exist, exit, express, extra<br/><br/>F-<br/>fair,false, fancy, fantastic, fashionable, faucet, fault, fear, fee, feeling, female, fence, film, final, fit, flag, flashlight, flat tire, flight, flour, flu, flute, focus, fog, foggy, foolish, football, forest, forgive, form, formal, former,  forward,  frank,  freedom,  freezer,  freezing,  friendship,  frighten,frisbee, furniture<br/><br/>G-<br/>gain, garage, gather, general, generous, genius, gentle, gentleman, geography, gesture,  goal,  gold,  golden,  golf,  goodness,  government,  granddaughter, grandson, greedy, greet, guard, guest, guide, gun<br/><br/>H-<br/>hair dresser, haircut, hall, hammer, handkerchief, handle, hanger, hardly, heater, helicopter, hero, highway, hip, hippo, hire, hole, homesick, honesty, hop, horrible, host, housework, hug, human, humble, humid, humor, humorous, hunger, hunter<br/><br/>I-<br/>ignore,  ill,  imagine,  impolite,  importance,  impossible,  improve,  include, income, increase, independent, indicate, influence, information, ink, insist,inspire,   instant,   instrument,   intelligent,   international,   interrupt, introduce, invent, invitation, iron<br/><br/>J-<br/>jam, jazz, jealous, jeep, journalist, judge<br/><br/>K-<br/>kangaroo, ketchup, kilometer, kindergarten, kingdom, kitten,koalaL-lack, lady, lamb, lantern, latest, latter, law, lay, leaf, lettuce, lick, lid, lift, lightning, likely, limit, link, liquid, liter, loaf, local, lock, locker, loser<br/><br/>M-<br/>ma'am, magazine, magician, major, male, mall, manager, mango, manner, marry, marvelous,  mass,  master, mat,  match,  maximum,  meaning,  measure,mechanic, memory, men's room, message, metal, meter, method, microwave, midnight, minor, minus, mirror, mix, model, monster, mosquito, motion, movement, MRT, musician<br/><br/>N-<br/>napkin, narrow, nation, natural, naughty, nearly, necessary, necklace, needle, negative, neither, nephew, nervous, nest, net, nice-looking, niece,nod, none, nor, novel, nut<br/><br/>O-<br/>obey, object, ocean, offer, omit, oneself, onion, operation, opinion, ordinary, oven, overpass, overseas, over-weight, owner, ox<br/><br/>P-<br/>pain, painful, painter, pajamas, pale, pan, panda, pardon, parking lot, parrot, partner, passenger, path, patient, pattern, pause, peace, peaceful, pepper, perfect, period, personal, physics, pigeon, pile, pillow, pineapple, plain, platform, pleasant, pleased, plus, poem, poison, pollute, pollution, pop music, population, position, positive, potato, powder, praise, precious, president, pressure,  priest,  primary, prince, princess,  principal,  principle,  print, printer, private, produce, production, professor, progress, project, promise, pronounce, protect, provide, pump, punish, purpose, purse, puzzle<br/>    <br/>Q-<br/>quit<br/><br/>R-<br/>railroad, railway, raincoat, rare, rather, realize, receive, record, recover, rectangle, recycle, refuse, regret, regular, reject, remind, rent,repair, respect, responsible, result, return, review, revise, rob, role, roller skate (roller blade),roof, rub, rubber, rude, ruin, rush</p>
</div>
<div class="activitywrap compositeNest flash"></div>
<div class="activitywrap compositeNest flash"></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>